{"version":3,"sources":["logo.svg","components/Table.js","components/AddEmployee.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","table","minWidth","avatar","margin","spacing","backgroundColor","palette","secondary","main","paper","display","flexDirection","justifyContent","alignItems","height","width","marginTop","link","color","textDecoration","marginLeft","alignSelf","SimpleTable","classes","React","useState","data","upDateData","firstLoad","setLoad","isLoading","a","fetch","response","json","body","sampleFunc","length","className","Avatar","avater","Typography","component","variant","CircularProgress","TableContainer","style","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","name","department","gender","dob","to","form","submit","textField","marginRight","AddEmployee","Date","selectedDate","setSelectedDate","setName","setDepartment","setGender","message","setMessage","toInput","method","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","console","log","id","Container","maxWidth","CssBaseline","noValidate","Grid","container","item","xs","TextField","required","fullWidth","value","label","autoComplete","onChange","event","target","sm","lablel","type","defaultValue","InputLabelProps","shrink","date","Button","preventDefault","onClick","variables","justify","App","exact","path","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00529bf0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport { Link } from \"react-router-dom\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n    table: {\n      minWidth: 600\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    paper: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      margin: `10px`,\n      height: \"100%\",\n      width: \"99%\",\n      marginTop: theme.spacing(7)\n    },\n    link: {\n      color: \"rgba(0,0,0,0.65)\",\n      textDecoration: \"none\",\n      marginLeft: \"10%\",\n      alignSelf: \"flex-start\",\n      \"&:hover\": {\n        color: \"rgba(0,0,0,1)\"\n      }\n    }\n  }));\n\nexport default function SimpleTable() {\n    const classes = useStyles();\n\n    const [data, upDateData] = React.useState([]);\n    const [firstLoad, setLoad] = React.useState(true);\n    let isLoading = true;\n\n    async function sampleFunc() {\n        let response = await fetch(\"/api/employee\");\n        let body = await response.json();\n        upDateData(body);\n    }\n\n    if(firstLoad) {\n        sampleFunc();\n        setLoad(false);\n    }\n\n    if (data.length > 0) isLoading = false;\n\n    return (\n        <div className={classes.paper}>\n            <Avatar className={classes.avater}>\n                <GroupIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n                Employee Directory\n            </Typography>\n\n            {isLoading ? (\n                <CircularProgress />\n            ) : (\n                <TableContainer\n                    style={{ width: \"80%\", margin: \"0 10px\" }}\n                    component={Paper}\n                >\n                    <Table className={classes.table} aria-label=\"simple table\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell align=\"center\">Name</TableCell>\n                                <TableCell align=\"center\">Department</TableCell>\n                                <TableCell align=\"center\">Gender</TableCell>\n                                <TableCell align=\"center\">DOB</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data?.map(row => (\n                                <TableRow key={row.name}>\n                                    <TableCell align=\"center\">{row.name}</TableCell>\n                                    <TableCell align=\"center\">{row.department}</TableCell>\n                                    <TableCell align=\"center\">{row.gender}</TableCell>\n                                    <TableCell align=\"center\">{row.dob}</TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            )}\n            <Link className={classes.link} to=\"/\">\n                <Typography align=\"left\">\n                    &#x2190; Head back to save data\n                </Typography>\n            </Link>\n        </div>\n    );\n}","import React from \"react\";\nimport { Avatar, Button, Container, CssBaseline, Grid, makeStyles, TextField, Typography } from \"@material-ui/core\";\nimport { Link } from \"react-router-dom\";\nimport GroupIcon from \"@material-ui/icons/Group\";\n\n\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(7),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", \n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    },\n    textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: \"100%\"\n    }\n}));\n\nexport default function AddEmployee() {\n    const classes = useStyles();\n    const [firstLoad, setLoad] = React.useState(true);\n\n    const [selectedDate, setSelectedDate] = React.useState(\n        new Date(\"1998-04-02T21:11:54\")\n    );\n    const [name, setName] = React.useState(\"\");\n    const [department, setDepartment] = React.useState(\"\");\n    const [gender, setGender] = React.useState(\"\");\n\n    const handleDateChange = date => setSelectedDate(date);\n    const handleNameChange = event => setName(event.target.value);\n    const handleDepartmentChange = event =>\n        setDepartment(event.target.value);\n    const handleGenderChange = event => setGender(event.target.value);\n\n    const[message, setMessage] = React.useState(\"Nothing saved in the session\");\n\n    async function sampleFunc(toInput) {\n        const response = await fetch(\"/api/employee\", {\n            method: \"POST\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            redirect: \"follow\",\n            referrerPolicy: \"no-referrer\",\n            body: JSON.stringify(toInput)\n        });\n        let body = await response.json();\n        console.log(body.id);\n        setMessage(body.id ? \"Data successfully updated\" : \"Data updation failed\");\n    }\n\n    const handleSubmit = variables => {\n        console.log(name);\n        console.log(department);\n        console.log(gender);\n        console.log({selectedDate});\n        const toInput = { name, department, gender, dob: selectedDate };\n        sampleFunc(toInput);\n        setName(\"\");\n        setDepartment(\"\");\n        setGender(\"\");\n    };\n\n    if(firstLoad) {\n        setLoad(false);\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <GroupIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Employee Directory\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                value={name}\n                                label=\"Name\"\n                                name=\"name\"\n                                autoComplete=\"name\"\n                                onChange={handleNameChange}\n                            />\n                        </Grid>\n                    \n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            autoComplete=\"department\"\n                            name=\"department\"\n                            variant=\"outlined\"\n                            required\n                            fullWidth\n                            value={department}\n                            id=\"department\"\n                            label=\"Department\"\n                            onChange={handleDepartmentChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12} sm={6}>\n                        <TextField\n                            variant=\"outlined\"\n                            name=\"gender\"\n                            required\n                            fullWidth\n                            value={gender}\n                            id=\"gender\"\n                            label=\"Gender\"\n                            autoComplete=\"gender\"\n                            onChange={handleGenderChange}\n                        />\n                    </Grid>\n\n                    <Grid item xs={12}>\n                        <TextField\n                            id=\"date\"\n                            lablel=\"Date of birth\"\n                            type=\"date\"\n                            defaultValue=\"1998-04-02\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={handleDateChange}\n                        />\n                    </Grid>\n                    </Grid>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        preventDefault\n                        className={classes.submit}\n                        onClick={handleSubmit}\n                    >\n                        Save\n                    </Button>\n                    <Grid container justify=\"center\">\n                        <Grid item>\n                            <Link to=\"/view\">View Employee Records</Link>\n                        </Grid>\n                    </Grid>\n                </form>\n                <Typography style={{ margin: 7 }} variant=\"body1\">\n                    status: {message}\n                </Typography>\n            </div>\n        </Container>\n    );\n}","import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Table from \"./components/Table\"\nimport AddEmployee from \"./components/AddEmployee\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Route exact path=\"/\" component={AddEmployee} />\n        <Route exact path=\"/view\" component={Table} />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}