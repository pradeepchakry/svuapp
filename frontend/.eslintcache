[{"/home/discovery/Documents/onlineapp/svuapp/frontend/src/StudyCntrDashboard.js":"1","/home/discovery/Documents/onlineapp/svuapp/frontend/src/index.js":"2","/home/discovery/Documents/onlineapp/svuapp/frontend/src/AuthApi.js":"3","/home/discovery/Documents/onlineapp/svuapp/frontend/src/BetterUser.js":"4","/home/discovery/Documents/onlineapp/svuapp/frontend/src/ApplicationForm.js":"5","/home/discovery/Documents/onlineapp/svuapp/frontend/src/App.js":"6","/home/discovery/Documents/onlineapp/svuapp/frontend/src/StudenRecords.js":"7","/home/discovery/Documents/onlineapp/svuapp/frontend/src/reportWebVitals.js":"8","/home/discovery/Documents/onlineapp/svuapp/frontend/src/FormModal.js":"9","/home/discovery/Documents/onlineapp/svuapp/frontend/src/ModalComponent.js":"10","/home/discovery/Documents/onlineapp/svuapp/frontend/src/FormComponent.js":"11","/home/discovery/Documents/onlineapp/svuapp/frontend/src/NodalDashboard.js":"12"},{"size":40295,"mtime":1611480942515,"results":"13","hashOfConfig":"14"},{"size":780,"mtime":1611121093194,"results":"15","hashOfConfig":"14"},{"size":91,"mtime":1610797535095,"results":"16","hashOfConfig":"14"},{"size":655,"mtime":1610804693756,"results":"17","hashOfConfig":"14"},{"size":21407,"mtime":1610797464107,"results":"18","hashOfConfig":"14"},{"size":21753,"mtime":1611484818841,"results":"19","hashOfConfig":"14"},{"size":2265,"mtime":1611049467655,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1609171927363,"results":"21","hashOfConfig":"14"},{"size":344,"mtime":1611065514214,"results":"22","hashOfConfig":"14"},{"size":599,"mtime":1611066482709,"results":"23","hashOfConfig":"14"},{"size":666,"mtime":1611066371837,"results":"24","hashOfConfig":"14"},{"size":35537,"mtime":1611491541440,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":73,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"lldrkd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":73,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},"/home/discovery/Documents/onlineapp/svuapp/frontend/src/StudyCntrDashboard.js",["64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport AuthApi from \"./AuthApi\";\nimport Cookies, { set } from 'js-cookie';\nimport OtpInput from 'react-otp-input';\nimport {Button, Modal} from 'react-bootstrap'\nimport RespModal from 'react-responsive-modal';\nimport { useState, useEffect } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nimport BetterUser from './BetterUser'\nimport ApplicationForm from './ApplicationForm';\nimport StudentRecords from './StudenRecords';\nimport usePromise from \"react-promise\";\n\nimport './custom-modal.css';\nimport { getDefaultLocale } from 'react-datepicker';\nimport * as ReactBootStrap from 'react-bootstrap';\n\nimport ReactDOM from \"react-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./styles.css\";\nimport {Col, Row} from 'react-bootstrap';\nimport Container from \"@material-ui/core/Container\";\nimport classes from './styles.css';\nimport FormModal from './FormModal';   \nimport ModalComponent from './ModalComponent'\nimport {Table, Form} from 'react-bootstrap';\nimport Select from \"react-select\";\nimport './reactselect.css'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\n\n// The gray background\nconst backdropStyle = {\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: 'rgba(0,0,0,0.3)',\n  padding: 50\n};\n\nconst selectStyles = {\n  control: (base) => ({\n    ...base,\n    minHeight: 32,\n    minWidth: 32\n  }),\n  dropdownIndicator: (base) => ({\n    ...base,\n    paddingTop: 0,\n    paddingBottom: 0,\n  }),\n  clearIndicator: (base) => ({\n    ...base,\n    paddingTop: 0,\n    paddingBottom: 0,\n  }),\n};\n\nconst useDateStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nconst courses = [\n  {\n    value: 'course1',\n    label: 'Course 1',\n  },\n  {\n    value: 'course2',\n    label: 'Course 2',\n  },\n  {\n    value: 'course3',\n    label: 'Course 3',\n  },\n  {\n    value: 'course4',\n    label: 'Course 4',\n  },\n];\n\nconst coursesFromDB = [];\n\nconst genders = [\n  {\n    value: 'male',\n    label: 'Male',\n  },\n  {\n    value: 'female',\n    label: 'Female',\n  }\n];\n\nconst mediums = [\n  {\n    value: 'english',\n    label: 'English',\n  },\n  {\n    value: 'telugu',\n    label: 'Telugu',\n  }\n];\n\nconst maritalStatuses = [\n  {\n    value: 'unmarried',\n    label: 'Unmarried',\n  },\n  {\n    value: 'married',\n    label: 'Married',\n  }\n];\n\n\n\nconst religions = [\n  {\n    value: 'hindu',\n    label: 'Hindu',\n  },\n  {\n    value: 'muslim',\n    label: 'Muslim',\n  },\n  {\n    value: 'christian',\n    label: 'Christian',\n  },\n  {\n    value: 'sikh',\n    label: 'Sikh',\n  },\n  {\n    value: 'others',\n    label: 'Others'\n  }\n];\n\nconst castes = [\n  {\n    value: 'oc',\n    label: 'OC',\n  },\n  {\n    value: 'bc',\n    label: 'BC',\n  },\n  {\n    value: 'sc',\n    label: 'SC',\n  },\n  {\n    value: 'st',\n    label: 'ST',\n  },\n  {\n    value: 'others',\n    label: 'Others'\n  }\n];\n\nconst residentialStatuses = [\n  {\n    value: 'urban',\n    label: 'Urban',\n  },\n  {\n    value: 'rural',\n    label: 'Rural',\n  },\n  {\n    value: 'tribal',\n    label: 'Tribal',\n  }\n];\n\nconst phCategories = [\n  {\n    value: 'no',\n    label: 'No',\n  },\n  {\n    value: 'yes',\n    label: 'Yes',\n  }\n];\n\nconst initialFomValues = {\n  name: \"\",\n  fatherName: \"\",\n  email: \"\"\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n},\ntextField: {\n    width: 300,\n    margin: 100,\n},\n//style for font size\nresize:{\n  fontSize:50\n}\n}));\n\nconst columns = [{\n  dataField: 'student_id',\n  text: 'Student ID'\n}, {\n  dataField: 'name',\n  text: 'Student Name'\n}, {\n  dataField: 'gender',\n  text: 'Gender'\n},\n{\n  dataField: 'aadhar_no',\n  text: 'Aadhar No.'\n},\n{\n  dataField: 'mobileNo',\n  text: 'Mobile No.'\n},\n{\n  dataField: 'registrationNo',\n  text: 'Registration No'\n},\n{\n  dataField: 'courseName',\n  text: 'Course Name'\n}];\n\n\nconst feeFromDB = [];\n\n// const styles = makeStyles((theme) => ({\n//   container: {\n//       display: 'flex',\n//       flexWrap: 'wrap',\n//   },\n//   textField: {\n//       width: 300,\n//       margin: 100,\n//   },\n//   //style for font size\n//   resize:{\n//     fontSize:50\n//   },\n//   })\n\nvar formData = {};\n\nfunction StudyCntrDashboard() {\n  const [auth, setAuth] = React.useState(false);\n  const Auth = React.useContext(AuthApi);\n  const [studentData, setStudentData] = React.useState([]);\n  const [courseData, setCourseData] = React.useState([]);\n  const [courseFetched, setCourseFetched] = React.useState(false);\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  \n  const [show, setShow] = React.useState(false);\n  const [modal, setModal] = React.useState(false);\n  const [dataExists, setDataExists] = React.useState(false);\n  const [loaded, setLoaded] = React.useState(false);\n  const [fetchFinished, setFetchFinished] = React.useState(false);\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalShowToggle, setModalShowToggle] = React.useState(false);\n\n  \n  const classes = useStyles();\n  const dateClasses = useDateStyles();\n\n\n  const [course, setCourse] = React.useState({value: 'course1', label: 'Course'});\n  const [studyCenterOptedCode, setStudyCenterOptedCode] = React.useState();\n  const [name, setName] = React.useState(\"\");\n  const [fatherName, setFatherName] = React.useState(\"\");\n  const [aadharNo, setAadharNo] = React.useState('');\n  const [doorNo, setDoorNo] = React.useState('');\n  const [street, setStreet] = React.useState('');\n  const [village, setVillage] = React.useState('');\n  const [mandal, setMandal] = React.useState('');\n  const [district, setDistrict] = React.useState('');\n  const [pincode, setPincode] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [courseID, setCourseID] = React.useState('');\n\n  const [gender, setGender] = React.useState('');\n  const [medium, setMedium] = React.useState('');\n  const [secondLanguageOpted, setSecondLanguageOpted] = React.useState('');\n  const [dob, setDob] = React.useState(Date(\"1978-04-02T21:11:54\"));\n  const [maritalStatus, setMaritalStatus] = React.useState('');\n  const [nationality, setNationality] = React.useState('Indian');\n  \n  const [religion, setReligion] = React.useState('');\n  const [caste, setCaste] = React.useState('');\n  const [residential, setResidential] = React.useState('');\n  const [phCategory, setPhCategory] = React.useState('');\n  const [qualifyingExamination, setQualifyingExamination] = React.useState('');\n  const [university, setUniversity] = React.useState('');\n  const [yearAndMonthPasssing, setYearAndMonthPassing] = React.useState(Date(\"1978-04-02T21:11:54\"));\n  const [groupSubjects, setGroupSubjects] = React.useState('');\n  const [maxMarks, setMaxMarks] = React.useState('');\n  const [marksObtained, setMarksObtained] = React.useState('');\n  const [percentageOfMarks, setPercentageOfMarks] = React.useState('');\n  const [feeAmount, setFeeAmount] = React.useState('');\n  const [challanId, setChallanId] = React.useState('challanId');\n  const [challanDate, setChallanDate] = React.useState(Date(\"2021-01-01T21:11:54\"));\n  const [bankName, setBankName] = React.useState('bankName');\n  const [declarationChecked, setDeclarationChecked] = React.useState('');\n  const [paymentStatus, setPaymentStatus] = React.useState('paymentStatus');\n  const [values, setValues] = React.useState(initialFomValues);\n  const [districtState, setDistrictState] = React.useState(\"\");\n  const [eligibilityMarks, setEligibilityMarks] = React.useState(\"\");\n  const [image, setImage] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const[saveSuccess, setSaveSuccess] = React.useState(false);\n  \n\n  // const [x, setX] = React.useState(5);\n\n  // setX(6);\n\n  // const [handleCourseChange] = useState(() => {\n  //   return () => {\n  //     setCourse(course);\n  //   };\n  // });\n\n  const handleFieldChange = (event) => {\n    console.log(\"selected course -> \" + event.target.value);\n    setGender(event.target.value);\n  };\n\n  const calculatePercentage = () => {\n    var marksObtainedInt = Number(marksObtained);\n    var maxMarksInt = Number(maxMarks);\n    var percentile = ((marksObtainedInt / maxMarksInt) * 1000);\n    \n    percentile = ( percentile.toString());\n    console.log(\"Marks obtained Integer --> \" + marksObtainedInt)\n    console.log(\"Max Marks Integer --> \" + maxMarksInt)\n    console.log(\"Percentage Marks --> \" + percentile)\n    setPercentageOfMarks(percentile);\n  }\n\n  const handleStudyCenterOptedCode = (event) => {\n    // console.log(event.target.value)\n    // let val = event.target.value;\n    \n    // event.preventDefault();\n    console.log(event.target.value)\n    // console.log(value);\n    setStudyCenterOptedCode(event.target.value)\n  }\n\n  const handleCourseChange = (course) => {\n    console.log(\"Course Id selected\" + course.value);\n    console.log(\"Course Name --> \" + course.label);\n    setCourseID(course.value);\n    setCourse(course.label);\n    var courseId = course.value;\n    for(var i = 0; i < feeFromDB.length; i++) {\n      var obj = feeFromDB[i];\n      if(obj.value === courseId) {\n        console.log(\"Fee for Course \" + courseId  + \" is \" + obj.label);\n        setFeeAmount(obj.label);\n      }\n  }\n    // setFeeAmount()\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setName(event.target.value)\n  }\n\n  const handleFatherName = (event) => {\n    console.log(event.target.value)\n    setFatherName(event.target.value)\n  }\n\n  const handleAadharNo = (event) => {\n    console.log(event.target.value)\n    setAadharNo(event.target.value)\n  }\n\n  const handleDoorNo = (event) => {\n    console.log(event.target.value)\n    setDoorNo(event.target.value)\n  }\n\n  const handleStreet = (event) => {\n    console.log(event.target.value)\n    setStreet(event.target.value)\n  }\n\n  const handleVillage = (event) => {\n    console.log(event.target.value)\n    setVillage(event.target.value)\n  }\n\n  const handleMandal = (event) => {\n    console.log(event.target.value)\n    setMandal(event.target.value)\n  }\n\n  const handleDistrict = (event) => {\n    console.log(event.target.value)\n    setDistrict(event.target.value)\n  }\n\n  const handleDistrictState = (event) => {\n    console.log(event.target.value)\n    setDistrictState(event.target.value)\n  }\n\n  const handlePincode = (event) => {\n    console.log(event.target.value)\n    setPincode(event.target.value)\n  }\n\n  const handlePhone = (event) => {\n    console.log(event.target.value)\n    setPhone(event.target.value)\n  }\n\n  const handleEmail = (event) => {\n    console.log(event.target.value)\n    setEmail(event.target.value)\n  }\n\n  const handleGenderChange = (gender) => {\n    console.log(\"Gender selected\" + gender.value);\n    setGender(gender.value)\n  }\n\n  const handleMedium = (medium) => {\n    console.log(medium.value)\n    setMedium(medium.value)\n  }\n\n  const handleSecondLanguageOpted = (event) => {\n    console.log(event.target.value)\n    setSecondLanguageOpted(event.target.value)\n  }\n  \n\n  const handleDOB = (event) => {\n    console.log(event.target.value)\n    setDob(event.target.value)\n  }\n\n  const handleMaritalStatus = (maritalStatus) => {\n    console.log(\"maritalStatus selected\" + maritalStatus.value);\n    setMaritalStatus(maritalStatus.value);\n  }\n\n  const handleNationality = (event) => {\n    setNationality(nationality);\n  }\n\n  const handleReligion = (religion) => {\n    console.log(\"Religion selected\" + religion.value);\n    setReligion(religion.value);\n  }\n\n  const handleCaste = (caste) => {\n    console.log(\"caste selected\" + caste.value);\n    setCaste(caste.value);\n  }\n\n  const handleResidentialStatus = (residential) => {\n    console.log(\"Residential selected\" + residential.value);\n    setResidential(residential.value);\n  }\n\n  const handlePhCategory = (phCategory) => {\n    console.log(\"phCategory selected\" + phCategory.value);\n    setPhCategory(phCategory.value);\n  }\n\n  const handleQualifyingExam = (event) => {\n    console.log(event.target.value)\n    setQualifyingExamination(event.target.value)\n  }\n\n  const handleUniversity = (event) => {\n    console.log(event.target.value)\n    setUniversity(event.target.value)\n  }\n\n  const handleYearAndMonth= (event) => {\n    console.log(event.target.value)\n    setYearAndMonthPassing(event.target.value)\n  }\n\n  const handleGroupSubjects = (event) => {\n    console.log(event.target.value)\n    setGroupSubjects(event.target.value)\n  }\n\n  const handleMaxMarks = (event) => {\n    console.log(event.target.value)\n    setMaxMarks(event.target.value)\n  }\n\n  const handleMarksObtained = (event) => {\n    setMarksObtained(event.target.value)\n    calculatePercentage(event.target.value);\n  }\n\n  const handlePercentageOfMarks = (percentageOfMarks) => {\n    setPercentageOfMarks(percentageOfMarks)\n  }\n\n  const handleEligibilityMarks = (event) => {\n    console.log(event.target.value)\n    setEligibilityMarks(event.target.value)\n  }\n\n  const handleFeeAmount = (feeAmount) => {\n    setFeeAmount(feeAmount)\n  }\n\n  const handleDeclarationChecked = (event) => {\n    console.log(event.target.value)\n    setDeclarationChecked(event.target.value)\n  }\n\n  const handleImage = (event) => {\n    console.log(event.target.value)\n    setImage(event.target.value)\n  }\n\n  const handleSignature = (event) => {\n    console.log(event.target.value)\n    setSignature(event.target.value)\n  }\n\n  const readCookie = () => {\n    const user = Cookies.get(\"user\");\n    console.log(\"user in readCookie --> \" + user);\n    console.log(\"nodalUser in readCookie --> \" + Cookies.get(\"nodalUser\"));\n    console.log(\"studyCntrUser in readCookie --> \" + Cookies.get(\"studyCntrUser\"));\n    if(user) {\n      setAuth(true);\n    }\n  }\n  \n//   React.useEffect(() => {\n//     console.log(\"Hi! from StudyCntrDashboard useEffect()\")\n//     readCookie();\n//   }, [])\n\nconst ModalPopUpHandler=()=>{\n  setModalShowToggle(!modalShowToggle);\n}\n\n  useEffect(() => {\n    console.log(\"Hi! from StudyCntrDashboard useEffect()\")\n    // readCookie();\n    loadData();\n    //getData()\n  }, [])\n\n  const loadData = () => {\n    let userID = Cookies.get(\"username\");\n    Cookies.set(\"username\", userID);\n    let len = userID.length;\n    let lastChar = userID.charAt(len - 1);\n    console.log(\"lastChar -> \" + lastChar);\n    console.log(\"userID while fetching studing data--> \" + lastChar)\n    let endPoint = \"http://localhost:8080/api/v1/Students/\" + lastChar;\n    let result = false;\n    fetch(endPoint).then(resp => resp.json())\n        .then(receivedData => {\n          console.log(\"received data --> \" + JSON.stringify(receivedData));\n          setStudentData(receivedData.map(studentData => ({\n            name: studentData.name,\n            id: studentData.student_id,\n            gender: studentData.gender,\n            aadhar_no: studentData.aadhar_no,\n            mobileNo: studentData.mobileNo,\n            registrationNo: studentData.registrationNo,\n            courseName: studentData.courseName,\n          })));\n          setDataExists(true);\n        });\n    \n    setLoaded(true);\n        \n  }\n  const ModalWithGrid = () => {\n    // return (<Modal show={show} animation={false}>Form</Modal>)\n\n    return (<div></div>\n      \n  )\n  // alert(\"Baang...!\")\n  // return(<Modal show={show} onHide={handleClose} animation={false}>Form</Modal>)\n}\n\n  const renderStudents = (student, index) => {\n      return(\n          <tr key={index}>\n              <td>{student.student_id}</td>\n              <td>{student.name}</td>\n              <td>{student.gender}</td>\n              <td>{student.aadhar_no}</td>\n              <td>{student.mobileNo}</td>\n              <td>{student.registrationNo}</td>\n              <td>{student.courseName}</td>\n          </tr>\n      )\n  }\n  \n\n  const onCloseModal = () => setOpen(false);\n\n  const handleClose = () => {\n    setShow(false);\n    loadData();\n  }\n  const handleShow = () => {\n    console.log(\"Rendering Form modal\")\n\n    // Fetch courses\n    let endPoint = \"http://localhost:8080/api/v1/courses\";\n    let result = false;\n    fetch(endPoint).then(resp => resp.json())\n        .then(receivedData => {\n          // console.log(\"received Course structures --> \" + JSON.stringify(receivedData));\n          setCourseData(receivedData.map(coursesData => ({\n            courseID: coursesData.courseID,\n            courseSubject: coursesData.courseSubject,\n            firstYearFee: coursesData.firstYearFee,\n          })));\n          // console.log(JSON.stringify(courseData));\n          setCourseFetched(true);\n        });\n    console.log(courseFetched);\n    if(courseFetched) {\n      var data = '{ \"courses\": '+ JSON.stringify(courseData) + '}';\n      console.log(data);\n      var coursesArr = JSON.parse(data);\n      // console.log(\"course data --> \" + coursesArr.courses[0] + \"course length --> \" + coursesArr.courses.length);\n      var list = coursesArr.courses.length;\n      var courseJson = {};\n      var feeJson = {}\n      for (var i = 0; i < list; i++) {\n        var counter = coursesArr.courses[i];\n        var id=counter.courseID;\n        var name = counter.courseSubject;\n        var fee = counter.firstYearFee;\n        //\n        courseJson[\"value\"] = id;\n        courseJson[\"label\"] = name;\n       \n        console.log(courseJson);\n        coursesFromDB.push(courseJson)\n        courseJson = {};\n\n        //Fee details\n        feeJson[\"value\"] = id;\n        feeJson[\"label\"] = fee;\n       \n        console.log(feeJson);\n        feeFromDB.push(feeJson)\n        feeJson = {};\n      }\n      \n        var a = JSON.stringify(feeFromDB);\n        console.log(\"Fee data in a --> \" + a);\n        a = JSON.stringify(coursesFromDB);\n        console.log(\"Courses data in a --> \" + a);\n    \n    }\n    setShow(true);\n  }\n  \n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log(\"course id --> \" + courseData.courseID)\n    var formDataJson = {};\n    formDataJson[\"appSerialNo\"] = \"120\"; //- missing in form\n    formDataJson[\"applicationNo\"] = \"120\"; //- missing in form\n    formDataJson[\"baGroupId\"] = \"\"; //- missing in form\n    formDataJson[\"monthYear\"] = yearAndMonthPasssing;\n    formDataJson[\"fees\"] = feeAmount;\n    formDataJson[\"caste\"] = caste;\n    formDataJson[\"courseId\"] = courseID; //- missing - should go in json\n    formDataJson[\"medium\"] = medium; //- missing\n    formDataJson[\"courseName\"] = course;\n    formDataJson[\"degree\"] = \"\"; //- not required\n    formDataJson[\"districtState\"] = districtState;\n    formDataJson[\"dob\"] = dob;\n    formDataJson[\"doorNo\"] = doorNo;\n    formDataJson[\"eligibilityMarks\"] = eligibilityMarks;\n    formDataJson[\"emailID\"] = email;\n    formDataJson[\"enrolmentNo\"] = \"abcxyz123\"; //- missing - not in form\n    formDataJson[\"fatherName\"] = fatherName;\n    formDataJson[\"gender\"] = gender;\n    formDataJson[\"groupSubjects\"] = groupSubjects;\n    formDataJson[\"hallTicketNo\"] = \"zyxabc120\"; //- missing - not in form\n    formDataJson[\"image\"] = \"\";\n    formDataJson[\"location\"] = \"\";\n    formDataJson[\"mandal\"] = mandal;\n    formDataJson[\"marksObtained\"] = marksObtained;\n    formDataJson[\"maritalStatus\"] = maritalStatus;\n    formDataJson[\"maxMarks\"] = maxMarks;\n    formDataJson[\"name\"] = name;\n    formDataJson[\"nationality\"] = nationality;\n    formDataJson[\"ousEducation\"] = \"\"; //- missing - unknown\n    formDataJson[\"percentageMarks\"] = percentageOfMarks;\n    formDataJson[\"phone\"] = phone;\n    formDataJson[\"pincode\"] = pincode;\n    formDataJson[\"printCount\"] = \"\";\n    formDataJson[\"qualifyingExam\"] = qualifyingExamination;\n    formDataJson[\"registrationNo\"] = //- missing - need to generate\n    formDataJson[\"religion\"] = religion;\n    formDataJson[\"residentialArea\"] = residential;\n    formDataJson[\"secondLanguage\"] = secondLanguageOpted;\n    formDataJson[\"signature\"] = \"\";\n    formDataJson[\"street\"] = street;\n    formDataJson[\"university\"] = university;\n    formDataJson[\"village\"] = village;\n    formDataJson[\"active\"] = true; //- missing - should go in json\n    formDataJson[\"approve\"] = false; //- missing - should go in json\n    // formDataJson[\"codeNo\"] = studyCenterOptedCode; // - studycenter code \n    formDataJson[\"mobileNo\"] = phone;\n    formDataJson[\"aadhar_no\"] = aadharNo;\n    formDataJson[\"phCategory\"] = phCategory;\n  console.log(\"Form Data JSON --> \" + JSON.stringify(formDataJson))\n  formData = formDataJson;\n  console.log(\"Form Data --> \" + JSON.stringify(formData));\n\n  //http://localhost:8080/api/v1/createStudentByStudyCenter/1\n  const requestOptions = {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(formData)\n  };\n  let result = \"\";\n  let endPoint = \"http://localhost:8080/api/v1/createStudentByStudyCenter/\" + studyCenterOptedCode;\n  const response = await fetch(endPoint, requestOptions)\n    .then(response => response.text())\n    .then(data => {\n      console.log(data);\n      result = data;\n      setSaveSuccess(true);\n      console.log(\"Form successfully saved :), closing form window...!\")\n      handleClose();\n    })    \n    .catch(error => console.log(\"Error detected: \" + error));\n  console.log(\"got response --> \" + result);\n\n  }\n\n  const toggle = () => {\n    setModal(!modal);\n  }\n  let userData = [];\n  let userName = \"\";\n  let userFetched = false;\n\n  const handleOnClick = () => {\n    Auth.setAuth(false);\n    Cookies.remove(\"user\");\n    Cookies.remove(\"studyCntrUser\");\n    Cookies.remove(\"username\");\n  } \n   \n    const showModalHandler = (event) =>{\n      setShowModal(true);\n    }\n\n    const hideModalHandler = (event) =>{\n      setShowModal(false);\n    }\n\n\n    if( !loaded ) {\n        return(\n            <div>loading...</div>\n        )\n    } else {\n      return(\n        <>\n        <div>\n          <div style={{float: 'right'}}>\n            <button onClick={handleOnClick}>Logout</button>\n          </div>\n          <div>\n            { dataExists ? <div>\n              <h1>Welcome {userName}</h1>\n                <h3>Student Records</h3>\n                  {/* <Table className=\"mt-4\" striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>Id</th>\n                        <th>Name</th>\n                        <th>Gender</th>\n                        <th>AAdhar No.</th>\n                        <th>Mobile No.</th>\n                        <th>Registration No.</th>\n                        <th>Course Applied</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* {studentData.map(renderStudents)}\n                       */}\n                       {/* {studentData.map((student, index) =>\n                        <tr key={index} >\n                        <td>{studentData.student_id}</td>\n                        <td>{studentData.gender}</td>\n                        <td>{studentData.aadhar_no}</td>\n                        <td>{studentData.mobileNo}</td>\n                        <td>{studentData.registrationNo}</td>\n                        <td>{studentData.courseName}</td>\n                        </tr>)}\n                    </tbody> */}\n                  {/* // </Table> */} \n                  <BootstrapTable keyField=\"name\" data={studentData} columns={columns} />\n                </div>\n                : <h1>No Student records for this Study Center</h1>}\n                </div>\n          \n          <button onClick={handleShow}>New Application</button>\n          {/* <ModalComponent show={modalShowToggle}></ModalComponent> */}\n          {/* <FormModal showModal={showModal} hideModalHandler={hideModalHandler}></FormModal> */}\n          {/* <ModalWithGrid show={show} onHide={() => {setShow(false)}}/> */}\n          <Modal show={show} animation={false} onHide={handleClose} \n            size=\"lg\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            className=\"my-modal-lg\"\n            dialogClassName=\"modal-full\"\n            bsClass=\"modal-full\"\n            centered\n            >\n      <Modal.Header closeButton cssModule={{'modal-title': 'w-100 text-center'}}>\n      <Modal.Title id=\"contained-modal-title-vcenter\">\n        Application Form\n      </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <Container>\n      <ValidatorForm id=\"myForm\" onSubmit={handleFormSubmit}\n        onError={errors => console.log(errors)}>\n        <Row>\n        \n        <Col xs={5} md={6}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"studyCenterOptedCode\"\n            label=\"Study Center opted with Code No.\"\n            name=\"studyCenterOptedCode\"\n            value={studyCenterOptedCode}\n            defaultValue=\"001\"\n            onChange={(event, value) => handleStudyCenterOptedCode(event)}\n            // autoFocus\n          />\n          \n          </Col>\n          </Row>\n          <Row>\n        <Col xs={10} md={3}>\n        <p>Course Applied</p>\n        <Select options={coursesFromDB} \n          maxWidth={50}\n          // value={course}\n          onChange={handleCourseChange}\n          className=\"Select-menu-outer\"\n        />\n        </Col >\n      </Row>\n      <Row>\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name\"\n            name=\"name\"\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            value={name}\n            placeholder=\"First Name\"\n            onChange={(event, value) => handleNameChange(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"fatherName\"\n            label=\"Father's Name\"\n            name=\"fatherName\"\n            onChange={(event, value) => handleFatherName(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"aadharNo\"\n            label=\"Aadhar No.\"\n            name=\"aadharNo\"\n            onChange={(event, value) => handleAadharNo(event)}\n          />\n        </Col>\n    </Row>\n    <Row>\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"doorNo\"\n            label=\"Door No.\"\n            name=\"Door No.\"\n            onChange={(event, value) => handleDoorNo(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"street\"\n            label=\"Street\"\n            name=\"Street\"\n            onChange={(event, value) => handleStreet(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"village\"\n            label=\"Village/Post\"\n            name=\"village\"\n            onChange={(event, value) => handleVillage(event)}  \n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"mandal\"\n            label=\"Mandal/Town\"\n            name=\"mandal\"\n            onChange={(event, value) => handleMandal(event)}\n            \n          />\n        </Col>\n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"district\"\n            label=\"District\"\n            name=\"district\"\n            onChange={(event, value) => handleDistrict(event)}\n        />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"districtState\"\n            label=\"State\"\n            name=\"districtState\"\n            type=\"districtState\"\n            onChange={(event, value) => handleDistrictState(event)}\n          />\n        </Col> \n\n        <Col xs={10} md={3}>\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            // fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"pincode\"\n            label=\"Pincode\"\n            name=\"pincode\"\n            onChange={(event, value) => handlePincode(event)}\n        />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"phone\"\n            label=\"Mobile Number\"\n            name=\"phone\"\n            type=\"phone\"\n            onChange={(event, value) => handlePhone(event)}\n          />\n        </Col> \n\n        <Col xs={10} md={4} >\n        <TextValidator\n            variant=\"outlined\"\n            margin=\"normal\"\n            // required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            // id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            // type=\"email\"\n            value={email}\n            validators={['required', 'isEmail']}\n            errorMessages={['this field is required', 'email is not valid']}\n            onChange={(event, value) => handleEmail(event)}\n          />\n        </Col>  \n    </Row>\n    <Row>\n      <Col xs={10} md={3}>\n        <p>Gender</p>\n        <Select options={genders} \n          maxWidth={50}\n          onChange={handleGenderChange}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n      <Col xs={10} md={3}>\n        <p>Medium</p>\n        <Select options={mediums} \n          maxWidth={50}\n          onChange={handleMedium}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n      <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"secondaryLangauage\"\n            label=\"Secondary Language Opted\"\n            name=\"secondaryLangauage\"\n            onChange={(event, value) => handleSecondLanguageOpted(event)}\n          />\n        </Col>\n        \n    </Row>\n    <Row>\n    <Col xs={13} md={3} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            // onChange={this.handleDOB}\n            id=\"nationality\"\n            label=\"Nationality\"\n            name=\"nationality\"\n            autoComplete=\"INDIAN\"\n            disabled\n            value={nationality}   \n          />\n        </Col>\n    </Row> \n    <Row>\n    <Col xs={13} md={2}>\n        <p>Marital Status</p>\n        <Select options={maritalStatuses} \n          maxWidth={50}\n          onChange={handleMaritalStatus}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n\n        <Col xs={10} md={2} >\n        <TextField\n          id=\"date\"\n          label=\"Date of Birth\"\n          type=\"date\"\n          defaultValue=\"1960-01-01\"\n          InputLabelProps={{style: {fontSize: 13}}}\n          className={dateClasses.textField}\n          InputLabelProps={{\n          shrink: true,\n          }}\n          onChange={(event, value) => handleDOB(event)}\n        />\n        </Col>\n        \n      </Row>\n\n      <Row>\n    <Col xs={13} md={3} >\n        <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            // onChange={this.handleDOB}\n            id=\"\"\n            label=\"\"\n            name=\"\"\n            disabled\n            // value={}    \n          />\n        </Col>\n    </Row>\n\n    <Row>\n    <Col xs={13} md={3} >\n        <TextField\n            variant=\"standard\"\n            margin=\"normal\"\n            required\n            fullWidth\n            // onChange={this.handleDOB}\n            id=\"\"\n            label=\"\"\n            name=\"\"\n            disabled\n            hidden\n            // value={}    \n          />\n        </Col>\n    </Row>\n      \n\n      <Row>\n      \n        <Col xs={10} md={3}>\n        <p>Religion</p>\n        <Select options={religions} \n          maxWidth={50}\n          onChange={handleReligion}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n        \n      <Col xs={10} md={3}>\n        <p>Caste</p>\n        <Select options={castes} \n          maxWidth={50}\n          onChange={handleCaste}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n      <Col xs={10} md={3}>\n        <p>Residential Status</p>\n        <Select options={residentialStatuses} \n          maxWidth={50}\n          onChange={handleResidentialStatus}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n      <Col xs={10} md={2}>\n        <p>PH Category?</p>\n        <Select options={phCategories} \n          maxWidth={50}\n          onChange={handlePhCategory}\n          className=\"Select-menu-outer\"\n        />\n      </Col>\n  </Row>\n \n  <Row>\n\n  \n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"qualifyingExam\"\n            label=\"Qualifying Examination\"\n            name=\"qualifyingExam\"\n            onChange={(event, value) => handleQualifyingExam(event)}\n          />\n        </Col>\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"university\"\n            label=\"University\"\n            name=\"university\"\n            onChange={(event, value) => handleUniversity(event)}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Col xs={10} md={2} >\n        <TextField\n          id=\"date\"\n          label=\"Year and Month Passing\"\n          type=\"date\"\n          defaultValue=\"1960-01-01\"\n          InputLabelProps={{style: {fontSize: 13}}}\n          className={dateClasses.textField}\n          InputLabelProps={{\n          shrink: true,\n          }}\n          onChange={(event, value) => handleYearAndMonth(event)}\n        />\n        </Col>\n      </Row>\n      <Row>\n      <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            label=\"Group Subjects\"\n            name=\"groupSubjects\"\n            placeholder=\"subject1, subject2,...\"\n            value={groupSubjects}\n            onChange={(event, value) => handleGroupSubjects(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            // id=\"maxMarks\"\n            label=\"Max Marks\"\n            name=\"maxMarks\"\n            value={maxMarks}\n            onChange={(event, value) => handleMaxMarks(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"marksObtained\"\n            label=\"Marks Obtained\"\n            name=\"marksObtained\"\n            value={marksObtained}\n            onChange={(event) => handleMarksObtained(event)}\n          />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"percentage\"\n            label=\"Percentage\"\n            name=\"percentage\"\n            value={percentageOfMarks}\n            disabled\n          />\n        </Col>\n\n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"feeAmount\"\n            label=\"Fee Amount\"\n            name=\"feeAmount\"\n            value={feeAmount}\n            disabled\n            \n          />\n        </Col>\n        \n        <Col xs={10} md={4} >\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            InputLabelProps={{style: {fontSize: 13}}}\n            InputProps={{style: {fontSize: 13}}}\n            id=\"paymentStatus\"\n            label=\"Payment Status\"\n            name=\"paymentStatus\"\n            disabled\n          />\n        </Col>\n        \n    </Row>\n\n    <Form.Row>\n      <Form.Group as={Col} id=\"formGridCheckbox\">\n        <Form.Check id=\"declarataion\"\n            name=\"declaration\" \n            type=\"checkbox\" \n            label=\"Declaration\"\n            onChange={(event) => handleDeclarationChecked(event)} />\n        <p>I hereby declare that the particulars given above are correct. In case if they are found to be incorrect\n            at a later date, I submit myself for any action including removal from the rolls and such other disciplinary\n            action under the ACT, the Statues and Ordinances rule of the University, I also agree to abide by the\n            conditions, rules and regulations stipulated by the Directorate of distance Education and the Laws of the\n            university applicable from time to time.</p>\n      </Form.Group>\n      \n    </Form.Row>\n  \n  \n  \n</ValidatorForm>\n</Container>\n  </Modal.Body>\n  <Modal.Footer>\n    <Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" variant=\"primary\" type=\"submit\">\n      Submit\n    </Button>\n    <Button onClick={handleClose}>Close</Button>\n  </Modal.Footer>\n  </Modal>\n          </div>  \n    </>\n        \n      )\n  }\n\n  \n\n}\n\n\nexport default StudyCntrDashboard;",["137","138"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/index.js",["139"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'jquery/dist/jquery.min'\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n// import registerServiceWorker from './registerServiceWorker';\nimport reportWebVitals from './reportWebVitals';\nwindow.$ = $;\nwindow.jQuery = $;\nrequire('bootstrap/dist/js/bootstrap.min');\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["140","141"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/AuthApi.js",[],["142","143"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/BetterUser.js",[],["144","145"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/ApplicationForm.js",["146","147","148","149","150","151","152","153","154","155"],"import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Checkbox from 'react-simple-checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from 'react-datepicker';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        SVUDDE\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst routeChange = () => { \n  // let path = `/home`; \n  //eslint-disable-next-line no-restricted-globals\n  history.push(\"/home\");\n}\n\nclass ApplicationForm extends React.Component {\n  \n\n  constructor(props) {\n    super(props);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  state = {\n    courseApplied: \"\",\n    studyCenterOptedCode: \"\",\n    name: \"\",\n    fatherName: \"\",\n    aadharNo: \"\",\n    doorNo: \"\",\n    street: \"\",\n    village: \"\",\n    mandal: \"\",\n    district: \"\",\n    pincode: \"\",\n    email: \"\",\n    gender: \"\",\n    medium: \"\",\n    secondLanguageOpted: \"\",\n    dob: new Date(\"1978-04-02T21:11:54\"),\n    maritalStatus: \"\",\n    nationality: \"\",\n    religion: \"\",\n    caste: \"\",\n    residential: \"\",\n    phCategory: \"\",\n    qualifyingExamination: \"\",\n    university: \"\",\n    yearAndMonthPasssing: new Date(\"1978-04-02T21:11:54\"),\n    groupSubject: \"\",\n    maxMarks: \"\",\n    marksObtained: \"\",\n    percentageOfMarks: \"\",\n    feeAmount: \"\",\n    challanId: \"\",\n    challanDate: new Date(\"2021-01-01T21:11:54\"),\n    bankName: \"\",\n    declarationChecked: \"\"\n  }\n\n  logoutHandler =(e) => {\n    this.props.history.push('/login')\n  }\n\n  handleCouseApplied = (courseApplied) => {\n    this.setState({\n      courseApplied: courseApplied\n    })\n  }\n\n  handleStudyCenterOptedCode = (codeOpted) => {\n    this.setState({\n      studyCenterOptedCode: codeOpted\n    })\n  }\n\n  handleNameChange = (name) => {\n    this.setState({\n      name: name\n    })\n  }\n\n  handleFatherName = (fatherName) => {\n    this.setState({\n      fatherName: fatherName\n    })\n  }\n\n  handleAadharNo = (aadharNo) => {\n    this.setState({\n      aadharNo: aadharNo\n    })\n  }\n\n  handleDoorNo = (doorNo) => {\n    this.setState({\n      doorNo: doorNo\n    })\n  }\n\n  handleStreet = (street) => {\n    this.setState({\n      street: street\n    })\n  }\n\n  handleVillage = (village) => {\n    this.setState({\n      village: village\n    })\n  }\n\n  handleMandal = (mandal) => {\n    this.setState({\n      mandal: mandal\n    })\n  }\n\n  handleDistrict = (district) => {\n    this.setState({\n      district: district\n    })\n  }\n\n  handlePincode = (pincode) => {\n    this.setState({\n      pincode: pincode\n    })\n  }\n\n  handleEmail = (email) => {\n    this.setState({\n      email: email\n    })\n  }\n\n  handleGenderChange = (gender) => {\n    this.setState({\n      gender: gender\n    })\n  }\n\n  handleMedium = (medium) => {\n    this.setState({\n      medium: medium\n    })\n  }\n\n  handleSecondLanguageOpted = (secondLanguageOpted) => {\n    this.setState({\n      secondLanguageOpted: secondLanguageOpted\n    })\n  }\n\n  handleDOB = (dob) => {\n    this.setState({\n      dob: dob\n    })\n  }\n\n  handleMaritalStatus = (maritalStatus) => {\n    this.setState({\n      maritalStatus: maritalStatus\n    })\n  }\n\n  handleNationality = (nationality) => {\n    this.setState({\n      nationality: nationality\n    })\n  }\n\n  handleReligion = (religion) => {\n    this.setState({\n      religion: religion\n    })\n  }\n\n  handleCaste = (caste) => {\n    this.setState({\n      caste: caste\n    })\n  }\n\n  handleResidential = (residential) => {\n    this.setState({\n      residential: residential\n    })\n  }\n\n  handlePhCategory = (phCategory) => {\n    this.setState({\n      phCategory: phCategory\n    })\n  }\n\n  handleQualifyingExam = (qualifyingExamination) => {\n    this.setState({\n      qualifyingExamination: qualifyingExamination\n    })\n  }\n\n  handleUniversity = (university) => {\n    this.setState({\n      university: university\n    })\n  }\n\n  handleYearAndMonth= (yearAndMonthPassing) => {\n    this.setState({\n      yearAndMonthPassing: yearAndMonthPassing\n    })\n  }\n\n  handleGroupSubject = (groupSubject) => {\n    this.setState({\n      groupSubject: groupSubject\n    })\n  }\n\n  handleMaxMarks = (maxMarks) => {\n    this.setState({\n      maxMarks: maxMarks\n    })\n  }\n\n  handleMarksObtained = (marksObtained) => {\n    this.setState({\n      marksObtained: marksObtained\n    })\n  }\n\n  handlePercentageOfMarks = (percentageOfMarks) => {\n    this.setState({\n      percentageOfMarks: percentageOfMarks\n    })\n  }\n\n  handleFeeAmount = (feeAmount) => {\n    this.setState({\n      feeAmount: feeAmount\n    })\n  }\n\n  handleChallanId = (chllanId) => {\n    this.setState({\n      chllanId: chllanId\n    })\n  }\n\n  handleChallanDate = (challanDate) => {\n    this.setState({\n      challanDate: challanDate\n    })\n  }\n\n  handleBankName = (bankName) => {\n    this.setState({\n      bankName: bankName\n    })\n  }\n\n  handleDeclarationChecked = (declarationChecked) => {\n    this.setState({\n      declarationChecked: declarationChecked\n    })\n  }\n\n\n  saveApplication = (toInput) => {\n    const response = fetch(\"/svudde/saveForm\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n    }).then(response => {\n      if(!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        console.log(\"SUCCESS\")\n        // console.log(\"Status: OK in Home -> Response: \" + JSON.stringify(response.json()));\n        // let responseText = document.createElement(response.json());\n        // document.body.appendChild(responseText);\n      }\n    })\n    .catch(e => {\n      console.log('There has been a problem with the fetch operation: ' + e.message)\n    })\n  }\n\n  handleFormSubmit = (variables) => {\n    variables.preventDefault();\n    console.log(\"Declaration checked\" + this.state.declarationChecked)\n    const toInput = this.state.gender;\n    this.saveApplication(toInput);\n  };\n\n  // if (firstLoad) {\n  //   // sampleFunc();\n  //   setLoad(false);\n  // }\n\n  render() {\n    const { classes } = this.props;\n  return (\n    \n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <BrowserRouter>\n                <div>\n                    {/* <header>\n                        <Link to='/contact'>Contact</Link>\n                    </header>\n                    <div>\n                        <Route path='/contact' Component={Contact}></Route>\n                    </div> */}\n                    {/* <a href=\"#\" onClick={e=>this.logoutHandler(e)}>Logout</a> */}\n                </div>\n    </BrowserRouter>\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Admission Application Form\n        </Typography>\n         <form className={classes.form} noValidate>\n        <p>Course and Subject Applied</p>\n        <select defaultValue={\"\"} \n            onChange={this.handleCouseApplied} \n        >\n          <option value=\"Couse1\">Course1</option>\n          <option value=\"Course2\">Course2</option>\n          <option value=\"Course3\">Course3</option>\n        </select>\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"studyCenterId\"\n            label=\"Study Center opted with Code No.\"\n            name=\"studyCenterId\"\n            defaultValue=\"001\"\n            onChange={this.handleStudyCenterOptedCode}\n            autoFocus\n          />\n        <p>(Only required for applicants from study centers)</p>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name of the Applicant (as per lower degree )\"\n            name=\"name\"\n            autoComplete=\"name\"\n            onChange={this.handleNameChange}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"fatherName\"\n            label=\"Father's Name\"\n            name=\"fatherName\"\n            autoComplete=\"fatherName\"\n            onChange={this.handleFatherName}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"aadharNo\"\n            label=\"AADHAR No.\"\n            name=\"aadharNo\"\n            autoComplete=\"\"\n            onChange={this.handleAadharNo}\n            \n          />\n          <p>-- Address for Communication --</p>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"doorNo\"\n            label=\"Door No.\"\n            name=\"Door No.\"\n            autoComplete=\"doorNo\"\n            onChange={this.handleDoorNo}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"street\"\n            label=\"Street\"\n            name=\"Street\"\n            autoComplete=\"street\"\n            onChange={this.handleStreet}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"village\"\n            label=\"Village/Post\"\n            name=\"village\"\n            autoComplete=\"village\"\n            onChange={this.handleVillage}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"mandal\"\n            label=\"Mandal/Town\"\n            name=\"mandal\"\n            autoComplete=\"mandal\"\n            onChange={this.handleMandal}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"district\"\n            label=\"District\"\n            name=\"district\"\n            autoComplete=\"mandal\"\n            onChange={this.handleDistrict}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"pincode\"\n            label=\"Pincode\"\n            name=\"pincode\"\n            autoComplete=\"pincode\"\n            onChange={this.handlePincode}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={this.handleEmail}\n            \n          />\n          <p>Gender</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleGenderChange} \n          >\n            <option value=\"M\">M</option>\n            <option value=\"F\">F</option>\n          </select> \n\n          <p>Medium</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleMedium} \n          >\n            <option value=\"English\">English</option>\n            <option value=\"Telugu\">Telugu</option>\n          </select>       \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"secondLanguage\"\n            label=\"(a) Second Language Opted under Part-I B:\"\n            name=\"secondLanguage\"\n            autoComplete=\"secondLanguage\"\n            onChange={this.handleSecondLanguageOpted}\n            \n          />\n          <p>(B.Sc- English Medium only)</p>\n          <p>(Only for B.A/B.Com/B.Sc)</p>\n          <br></br>\n          \n          <Grid item xs={12}>\n                        <TextField\n                            id=\"date\"\n                            label=\"Date of birth\"\n                            name=\"Date of Birth\"\n                            type=\"date\"\n                            defaultValue=\"1978-04-02\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleDOB}\n                        />\n                    </Grid>\n          <br></br>\n          <p>Marital Status</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleMaritalStatus} \n          >\n            <option value=\"Single\">Unmarried</option>\n            <option value=\"Married\">Married</option>\n          </select>  \n          <br></br>\n          <p>Nationality</p>\n          <input className=\"e-input\" type=\"text\" placeholder=\"Indian\" value=\"Indian\" readOnly= {true}/>\n          <br></br>\n          <p>Religion</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleReligion} \n          >\n            <option value=\"Hindu\">Hindu</option>\n            <option value=\"Muslim\">Muslim</option>\n            <option value=\"Christian\">Christian</option>\n            <option value=\"Sikh\">Sikh</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br></br>\n          <p>Caste</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleCaste} \n          >\n            <option value=\"OC\">OC</option>\n            <option value=\"BC\">BC</option>\n            <option value=\"SC\">SC</option>\n            <option value=\"ST\">ST</option>\n            <option value=\"Others\">Others</option>\n          </select>\n\n          <br></br>\n          <p>Residential Status</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleResidential} \n          >\n            <option value=\"Urban\">Urban</option>\n            <option value=\"Rural\">Rural</option>\n            <option value=\"Tribal\">Tribal</option>\n          </select>\n          \n          <p>Whether belongs to PH Category?</p>\n          <select defaultValue={\"No\"} \n              onChange={this.handlePhCategory} \n          >\n            <option value=\"No\">No</option>\n            <option value=\"Yes\">Yes</option>\n          </select>\n          <br></br>\n          <p>-- Particulars of the Qualifying Examinations passed --</p>\n          \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"qualifyingExamination\"\n            label=\"Qualifying Examination\"\n            name=\"qualifyingExamination\"\n            autoComplete=\"qualifyingExamination\"\n            onChange={this.handleQualifyingExam}\n            \n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"university\"\n            label=\"University\"\n            name=\"university\"\n            autoComplete=\"university\"\n            onChange={this.handleUniversity}\n            \n          />\n\n          <Grid item xs={12}>\n                        <TextField\n                            id=\"yearAndMonth\"\n                            label=\"Year and Month\"\n                            name=\"yearAndMonth\"\n                            type=\"date\"\n                            defaultValue=\"1998-04-02\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleYearAndMonth}\n                        />\n                    </Grid>\n          <br></br>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"groupSubject\"\n            label=\"Group or Subject\"\n            name=\"groupSubject\"\n            autoComplete=\"groupSubject\"\n            onChange={this.handleGroupSubject}\n            \n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"maxMarks\"\n            label=\"Maximum Marks\"\n            name=\"maxMarks\"\n            autoComplete=\"maxMarks\"\n            onChange={this.handleMaxMarks}\n            \n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"marksObtained\"\n            label=\"Marks Obtained\"\n            name=\"marksObtained\"\n            autoComplete=\"marksObtained\"\n            onChange={this.handleMarksObtained}\n            \n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"percentageOfMarks\"\n            label=\"Percentage of Marks\"\n            name=\"percentageOfMarks\"\n            autoComplete=\"percentageOfMarks\"\n            onChange={this.handlePercentageOfMarks}\n            \n          />\n\n          <p>-- Fee Particulars --</p>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"feeAmount\"\n            label=\"Fee Amount\"\n            name=\"feeAmount\"\n            autoComplete=\"feeAmount\"\n            onChange={this.handleFeeAmount}\n            \n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"challanId\"\n            label=\"Paid Challan Id\"\n            name=\"challanId\"\n            autoComplete=\"challanId\"\n            onChange={this.handleChallanId}\n            \n          />\n          <Grid item xs={12}>\n                        <p>Challan Payment Date</p>\n                        <TextField\n                            id=\"challanPaymentDate\"\n                            name=\"challanPaymentDate\"\n                            type=\"date\"\n                            defaultValue=\"2021-01-01\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleChallanDate}\n                        />\n                    </Grid>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"bankName\"\n            label=\"Bank Name\"\n            name=\"bankName\"\n            autoComplete=\"bankName\"\n            onChange={this.handleBankName}\n          />\n\n           <Checkbox\n            name=\"declaration\"\n            label=\"declaration\"\n            checked={this.state.declarationChecked}\n            onChange={this.handleDeclarationChecked}\n          /> \n          <p>I hereby declare that the particulars given above are correct. In case if they are found to be incorrect\n            at a later date, I submit myself for any action including removal from the rolls and such other disciplinary\n            action under the ACT, the Statues and Ordinances rule of the University, I also agree to abide by the\n            conditions, rules and regulations stipulated by the Directorate of distance Education and the Laws of the\n            university applicable from time to time.</p>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this.handleFormSubmit}\n          >\n            Save\n          </Button>\n        </form> \n\n        \n      </div>\n      {/* <div className=\"responseData\">\n        {this.setSaveResponse}\n      \n      </div> */}\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n                          }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(ApplicationForm);\n\n",["156","157"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/App.js",["158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport { AppBar, Toolbar, Grid, Tabs, Tab, makeStyles, InputBase, IconButton } from '@material-ui/core';\nimport AuthApi from \"./AuthApi\";\nimport Cookies, { set } from 'js-cookie';\nimport OtpInput from 'react-otp-input';\nimport {Button, Modal} from 'react-bootstrap'\nimport RespModal from 'react-responsive-modal';\nimport { useState, useEffect } from 'react';\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\n\n\n\nimport BetterUser from './BetterUser'\nimport ApplicationForm from './ApplicationForm';\nimport StudentRecords from './StudenRecords';\nimport usePromise from \"react-promise\";\n\nimport './custom-modal.css';\nimport { getDefaultLocale } from 'react-datepicker';\nimport StudyCntrDashboard from './StudyCntrDashboard';\nimport NodalDashboard from './NodalDashboard';\nimport \"bootstrap/dist/css/bootstrap-theme.css\";\n\n// The gray background\nconst backdropStyle = {\n  position: 'fixed',\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  backgroundColor: 'rgba(0,0,0,0.3)',\n  padding: 50\n};\n\nconst useStyles = makeStyles({\n  appMain: {\n    padeingLeft: '320px',\n    width: '100%'\n  },\n  root: {\n    backgroundColor: \"GREY\",\n  },\n  btnRoot: {\n    backgroundColor: \"black\",\n  },\n  btnLabel: {\n    backgroundColor: \"white\",\n  }\n})\n\n\n\nfunction App() {\n  const [auth, setAuth] = React.useState(false);\n\n  const readCookie = () => {\n    const user = Cookies.get(\"user\");\n    console.log(\"user in readCookie --> \" + user);\n    console.log(\"nodalUser in readCookie --> \" + Cookies.get(\"nodalUser\"));\n    console.log(\"studyCntrUser in readCookie --> \" + Cookies.get(\"studyCntrUser\"));\n    if(user) {\n      setAuth(true);\n    }\n  }\n  \n  React.useEffect(() => {\n    console.log(\"Hi! from userEffect()\")\n    readCookie();\n  }, [])\n\n\n  return (\n    <div>\n      <AuthApi.Provider value={{auth,setAuth}}>\n      <Router>\n        <Routes />\n      </Router>\n      </AuthApi.Provider>\n    </div>\n  );\n}\n\n\n\n\nconst NodalLogin = () => {\n\n  const [phone, setPhone] = React.useState(\"\");\n  const [errors, setErrors] = React.useState({});\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalOpen, setModalOpen] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [displayOtpForm, setDisplayOtpForm] = React.useState(false);\n  const [show, setShow] = React.useState(false);\n  const [otpSentSessionId, setOtpSentSessionId] = React.useState(\"\");\n  const [studentId, setStudentId] = React.useState(\"\");\n  const classes = useStyles();\n\n  async function handleSendOTP() {\n    console.log(\"sending otp to \" + phone);\n    let endPoint = \"https://2factor.in/API/V1/4db73c1e-4cfa-11eb-8153-0200cd936042/SMS/\"\n        + phone + \"/AUTOGEN\";\n    await fetch(endPoint)\n        .then(res => res.json())\n        .then((data) => {\n          setOtpSentSessionId(data.Details);\n        })\n        .catch(console.log)\n    console.log(\"otp sent sessionID >> \" + otpSentSessionId);\n    \n  }\n  \n   function checkExistingStudent(input) {\n    console.log(\"In checkExistingStudent...\")\n    let result = false;\n    let endPoint = \"http://localhost:8080/api/v1/Student/\" + input;\n     fetch(endPoint)\n        .then(res => {\n          if(!res.ok) {\n            result = false;\n            Cookies.set(\"user\", \"loginTrue\");\n            Cookies.set(\"nodalUser\", \"loginTrue\");\n            Auth.setAuth(true);\n            console.log(\"No Student found with the number \" + input \n                + \" redirecting to new application!\");\n            Cookies.set(\"user\", \"loginTrue\");\n            Cookies.set(\"nodalUser\", \"loginTrue\");\n          } else {\n            result = true;\n            console.log(\"Found an existing record with the number \" + input\n                + \" enrolled, fethcing record!\");\n  \n            fetch(\"http://localhost:8080/api/v1/Student/\" + phone)\n                .then(resp => resp.json())\n                .then((data) => {\n                  console.log(\"Existing student details --> \" + JSON.stringify(data));\n                  setStudentId(data.student_id);\n                  Cookies.set(\"studentFound\", \"true\");\n                  Cookies.set(\"studentId\", data.student_id);\n                  Cookies.set(\"user\", \"loginTrue\");\n                  Cookies.set(\"nodalUser\", \"loginTrue\");\n                  Auth.setAuth(true);\n                })\n          }\n        }\n        ).catch(console.log);\n        return result;\n  }\n  \n   async function verifyOTP(otpReceived) {\n    console.log(otpReceived);\n    let validMobile = false;\n    let endPoint = \"https://2factor.in/API/V1/4db73c1e-4cfa-11eb-8153-0200cd936042/SMS/VERIFY/\"\n        + otpSentSessionId + \"/\" + otpReceived;\n    await fetch(endPoint)\n        .then(res => {\n          console.log(\"otp verification >> \" + res.staus);\n          if(!res.ok) {\n                throw new Error(`HTTP error! status: ${res.status}`);\n            } else {\n                console.log(\"Status: OK\");\n                validMobile = true;\n            }           \n        })\n        .catch(console.log);\n    return validMobile;\n  }\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => {\n    console.log(\"In handleOnClick...\");\n    console.log(\"sending otp\");\n    //handleSendOTP();\n    console.log(\"Otp sent successfully\");\n    setShow(true);\n  }\n\n  \n\n  const Auth = React.useContext(AuthApi);\n  const [otp, setOtp] = React.useState(\"\");\n\n  const handleChange = otp => {\n    setOtp(otp);\n    console.log(\"Otp entered is \" + otp)\n  }\n  \n  const handleOTPSubmit = () => {\n      console.log(\"verify otp\" + otp);\n      \n      // verifyOTP(otp).then(bool => {\n      //   console.log(\"otp valid \" + bool)\n      //   Cookies.set(\"user\", \"loginTrue\");\n      //   Cookies.set(\"nodalUser\", \"loginTrue\");\n      //   Auth.setAuth(true);\n      //   window.nodalLoggedIn = true;\n      //   window.studyCntrLoggedIn = false;\n      //   window.homePage = false;\n      // });\n\n      Cookies.set(\"user\", \"loginTrue\");\n      console.log(Cookies.get(\"user\"));\n      if(Cookies.get(\"user\") == \"loginTrue\") {\n        checkExistingStudent(phone);\n      }\n  }\n\n  const handlePhone = (e) => {\n    setPhone(e.target.value)\n  }\n\n  return (\n    <div classes={classes.appMain}>\n      <label>\n        Phone\n        <input\n        type=\"tel\"\n        name=\"phone\"\n        onChange={handlePhone}\n      />\n      </label>\n      <div className=\"form-group\">\n      <>\n      <button variant=\"primary\" onClick={handleShow}>\n        Login\n      </button>\n\n      <Modal size=\"sm\" show={show} onHide={handleClose} \n          aria-labelledby=\"example-modal-sizes-title-sm\" animation={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Verify OTP</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <OtpInput\n            value={otp}\n            onChange={handleChange}\n            numInputs={6}\n            separator={<span>-</span>}\n          />\n        </Modal.Body>\n        <Modal.Footer>\n          <button variant=\"secondary\" onClick={handleClose}>\n            Change Number\n          </button>\n          <button variant=\"primary\" onClick={handleOTPSubmit}>\n            Submit\n          </button>\n        </Modal.Footer>\n      </Modal>\n    </>\n      </div>\n      \n    </div>\n\n    \n  )\n}\n\nconst StudyCntrLogin = () => {\n  const Auth = React.useContext(AuthApi);\n  const [input, setInput] = React.useState({});\n  const [errors, setErrors] = React.useState({});\n\n  async function authenticateUser(input) {\n    let userID = input[\"username\"];\n    let password = input[\"password\"];\n    let inputNew = {\"userID\": userID, \"password\": password};\n\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userID: userID, password: password })\n    };\n\n    console.log(\"Authenticating User \" + inputNew[\"userID\"] \n        + \" with password \" + inputNew[\"password\"]);\n    let result = \"\";\n    let endPoint = \"http://localhost:8080/api/v1/studyCentres/validateUser\";\n    const response = await fetch(endPoint, requestOptions)\n      .then(response => response.text())\n      .then(data => {\n        console.log(data);\n        result = data;\n      })    \n      .catch(error => console.log(\"Error detected: \" + error));\n    console.log(\"got response --> \" + result);\n    return result;\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if(validate()){\n      authenticateUser(input).then(result => {\n        console.log(\"got result in validate block --> \" + result);\n        if(result === \"true\") {\n          Cookies.set(\"username\", input[\"username\"]);\n          Cookies.set(\"user\", \"loginTrue\");\n          Cookies.set(\"studyCntrUser\", \"loginTrue\");\n          Auth.setAuth(true);\n        } else {\n          alert(\"Username or Password is incorrect.\");\n          resetForm();\n        }\n      });\n    } else {\n      resetForm();\n    }\n\n  }\n\n  const handleChange = (event) => {\n    let userInput = input;\n    userInput[event.target.name] = event.target.value;\n    setInput(userInput)\n  }\n\n  const resetForm = () => {\n    Array.from(document.querySelectorAll(\"input\")).forEach(\n      input => (input.value = \"\")\n    );\n    setInput({});\n  };\n\n  const validate  = () => {\n    let userInput = input;\n    let userErrors = {};\n    let isValid = true;\n\n    if (!userInput[\"username\"]) {\n        isValid = false;\n        userErrors[\"username\"] = \"Please enter your username.\";\n        resetForm();\n    }\n    \n    if (typeof userInput[\"username\"] !== \"undefined\") {\n        const re = /^\\S*$/;\n        if(userInput[\"username\"].length < 6 || !re.test(userInput[\"username\"])) {\n          isValid = false;\n          userErrors[\"username\"] = \"Please enter valid username.\";\n          resetForm();\n        }\n        \n    }\n    \n    if (!userInput[\"password\"]) {\n      isValid = false;\n      userErrors[\"password\"] = \"Please enter your password.\";\n    }\n\n    if (userInput[\"username\"]){\n      if(!userInput[\"password\"]) {\n        isValid = false;\n        userErrors[\"password\"] = \"Please enter your password.\";\n      }\n      setInput(userInput);\n  }\n\n    setErrors(userErrors);\n    return isValid;\n  }\n  return (\n    <div className=\"backdrop\" style={{backdropStyle}}>\n      <form onSubmit={handleSubmit}>\n          <div class=\"form-group\">\n            <label for=\"username\">Username </label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={input.username}\n              onChange={handleChange}\n              class=\"form-control\" \n              placeholder=\"Enter username\" \n              id=\"username\" />\n          <div className=\"text-danger\">{errors.username}</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password </label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={input.password}\n              onChange={handleChange}\n              class=\"form-control\" \n              placeholder=\"Enter password\" \n              id=\"password\" />\n          <div className=\"text-danger\">{errors.username}</div>\n        </div>\n        <div className=\"text-danger\">{errors.password}</div>\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-success\" />\n      </form>\n    </div>\n  )\n}\n\n// const NodalDashboard = () => {\n//   const Auth = React.useContext(AuthApi);\n//   const [show, setShow] = React.useState(true);\n//   const handleClose = () => {\n//     setShow(false);\n//   }\n//   const handleShow = () => {\n//     console.log(\"Rendering Form modal\")\n//     setShow(true);\n//   }\n//   const handleOnClick = () => {\n//     Auth.setAuth(false);\n//     Cookies.remove(\"user\");\n//     Cookies.remove(\"nodalUser\");\n//     Cookies.remove(\"studentFound\");\n//     Cookies.remove(\"studentId\");\n//     window.studyCntrLoggedIn = false;\n//     window.nodalLoggedIn = false;\n//     window.homePage = true;\n//   }\n\n  \n//   var found = false;\n//   if(Cookies.get(\"studentFound\") === \"true\") {\n//     console.log(\"Student found!\" );\n//     found = true;\n//   }\n\n//   return(\n//     <div style={{}}>\n//       <div style={{float: 'right'}}>\n//         <button onClick={handleOnClick}>Logout</button>\n//       </div>\n//       {found? <div style={{clear: 'both'}}>\n//           <h1>{Cookies.get(\"studentId\")}</h1></div>:\n//         <ApplicationForm />}\n\n      \n//     </div>\n//   )\n// }\n\n\n// const StudyCntrDashboard = async () => {\n//   const Auth = React.useContext(AuthApi);\n//   const [studentData, setStudentData] = React.useState([]);\n//   const [value, setValue] = React.useState(0);\n//   const [open, setOpen] = React.useState(false);\n//   const [formData, setFormData] = React.useState({});\n//   const [show, setShow] = React.useState(false);\n//   const [modal, setModal] = React.useState(false);\n//   const [dataExists, setDataExists] = React.useState(false);\n//   const [fetchFinished, setFetchFinished] = React.useState(false);\n\n//   // useEffect(() => {\n//   //   loadData();\n//   //   //getData()\n//   // }, [])\n\n//   // const loadData = async () => {\n//   //   let userID = Cookies.get(\"username\");\n//   //   let len = userID.length;\n//   //   let lastChar = userID.charAt(len - 1);\n//   //   console.log(\"lastChar -> \" + lastChar);\n//   //   console.log(\"userID while fetching studing data--> \" + lastChar)\n//   //   let endPoint = \"http://localhost:8080/api/v1/Students/\" + lastChar;\n//   //   let result = false;\n//   //   await fetch(endPoint).then(resp => resp.json())\n//   //       .then(receivedData => {\n//   //         console.log(\"received data --> \" + receivedData)\n//   //         setStudentData(receivedData)\n//   //         setDataExists(true)\n//   //       });\n//   // }\n  \n\n//   const onCloseModal = () => setOpen(false);\n\n//   const handleClose = () => {\n//     setShow(false);\n//   }\n//   const handleShow = () => {\n//     console.log(\"Rendering Form modal\")\n//     setShow(true);\n//   }\n\n//   const handleChange = formData => {\n//     setFormData(formData);\n//     console.log(\"Form Data --> \" + formData)\n//   }\n  \n//   const handleFormSubmit = () => {\n//     console.log(\"Form Data --> \" + formData)\n//   }\n\n//   const toggle = () => {\n//     setModal(!modal);\n//   }\n//   let userData = [];\n//   let userName = \"\";\n//   let userFetched = false;\n\n//   const handleOnClick = () => {\n//     Auth.setAuth(false);\n//     Cookies.remove(\"user\");\n//     Cookies.remove(\"studyCntrUser\");\n//     Cookies.remove(\"username\");\n//     // window.nodalLoggedIn = false;\n//     // window.studyCntrLoggedIn = false;\n//     // window.homePage = true;\n//   } \n   \n//   var promise = new Promise( async (resolve, reject) => {\n//     let userID = Cookies.get(\"username\");\n//     let len = userID.length;\n//     let lastChar = userID.charAt(len - 1);\n//     console.log(\"lastChar -> \" + lastChar);\n//     console.log(\"userID while fetching studing data--> \" + lastChar)\n//     let endPoint = \"http://localhost:8080/api/v1/Students/\" + lastChar;\n//     let result = false;\n//     let response = await fetch(endPoint).then(resp => resp.json());\n//     result = await response.then(data => {\n//       setDataExists(true);\n        \n//       console.log(\"data fetched --> \" + data);\n      \n//     }).catch(error => console.log(\"Error detected: \" + error));\n//     if (dataExists) {\n//        resolve(\"Promise resolved successfully\");\n//     }\n//     else {\n//        reject(Error(\"Promise rejected\"));\n//     }\n//  });\n\n\n//     promise.then( result => {\n//       console.log(\"Promise resolved, setting student data!\");\n//       setStudentData(result);\n//       setFetchFinished(true);\n//       userFetched = true;\n//     }, function(error) {\n//       console.log(error);\n//     });\n\n//       console.log(\"student data --> \" + studentData);\n//       return(\n//         <div>\n//           <div style={{float: 'right'}}>\n//             <button onClick={handleOnClick}>Logout</button>\n//           </div>\n//           <div>\n//             { dataExists ? <div>\n//               <h1>Welcome {userName}</h1>\n//                 <h3>Student Records</h3>\n//                 {/* <StudentRecords data={studentData} /> */}\n//                 {studentData.map(record => (\n//                   <div key={record.id}> </div>\n//                 ))}\n//                 </div>\n//                 : <h1>No Student records for this Study Center</h1>}\n//                 </div>\n//           <>\n//           <button onClick={handleShow}>New Application</button>\n    \n//           <Modal show={show} onHide={handleClose} \n//             dialogClassName=\"modal-full\"\n//             >\n//             <Modal.Header closeButton style={{float: 'left'}}>\n//             </Modal.Header>\n//             <Modal.Body style={{'max-height': '50vh', 'overflow-y': 'auto'}}>\n//               <ApplicationForm />\n//             </Modal.Body>\n//             </Modal>\n//         </>\n//         </div>\n//       )\n  // if(isFetching) {\n  //   return <div> Loading.. </div>\n  // } else {\n  \n\n  // fetchExistingRecords().then(data => {\n    // let tableSize = 0;\n    // console.log(\"result after fetch function --> \" + dataExists);\n    // console.log(\"Student data exists! Rendering records --> \" + JSON.stringify(studentData));\n    // userFetched = true;\n\n    // var key, count = 0;\n    // for( key in studentData) {\n    //     if(studentData.hasOwnProperty(key)) {\n    //         count++;\n    //     }\n    // }\n\n    //   console.log(count)\n    //   tableSize = count;  \n// }\n// }\n\nconst HomeComponent= () => {\n      return(\n          <div>\n            <p>SVUDDE Online Application</p>\n          </div>  \n      )\n}\n\n\nconst Routes = () => {\n  const Auth = React.useContext(AuthApi);\n  const [value, setValue] = React.useState(0);\n\n  const handleTabs = (e, val) => {\n    console.warn(\"tab value is \" + val)\n    setValue(val);\n\n    \n  }\n  const classes = useStyles();\n  var displayHome = true;\n  var nodalUserVal = Cookies.get(\"nodalUser\");\n  var displayNodal = false;\n  if(nodalUserVal) {\n    console.log(\"Set Display Nodal User True\");\n    displayNodal = true;\n    displayHome = false;\n  }\n\n  var studyCntrUserVal = Cookies.get(\"studyCntrUser\");\n  var displayStudyCntr = false;\n  if(studyCntrUserVal) {\n    console.log(\"Set Display Study Center User True\");\n    displayStudyCntr = true;\n    displayHome = false;\n  }\n\n  console.log(\"users --> \" + \" Nodal value -> \" + nodalUserVal + \" Study Center value -> \" + studyCntrUserVal)\n\n  return(\n    <div>\n    <AppBar position=\"static\" className={classes.root}>\n      <Toolbar>\n        <Grid container>\n          <Grid item>\n          {displayNodal && <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Dashboard\" component={Link} to=\"/nodalDashboard\" />\n      </Tabs>}\n\n      {displayStudyCntr && <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Dashboard\" component={Link} to=\"/studyCntrDashboard\" />\n      </Tabs>}\n\n      {displayHome && \n        <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Study Center\" component={Link} to=\"/studyCntrLogin\"/>\n        <Tab label=\"Nodal\" component={Link} to=\"/nodalLogin\"/>\n      </Tabs>}\n          </Grid>\n          <Grid item sm>\n          </Grid>\n          <Grid item>\n            <IconButton>\n              <PowerSettingsNewIcon fontSize=\"large\" classes={{root:classes.btnLabel, label:classes.btnLabel}} /> \n            </IconButton>\n          </Grid>\n        </Grid>\n      </Toolbar>\n      {/* {displayNodal && <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Dashboard\" component={Link} to=\"/nodalDashboard\" />\n      </Tabs>}\n\n      {displayStudyCntr && <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Dashboard\" component={Link} to=\"/studyCntrDashboard\" />\n      </Tabs>}\n\n      {displayHome && \n        <Tabs value={value} onChange={handleTabs} >\n        <Tab label=\"Home\"  component={Link} to=\"/\"/>\n        <Tab label=\"Study Center\" component={Link} to=\"/studyCntrLogin\"/>\n        <Tab label=\"Nodal\" component={Link} to=\"/nodalLogin\"/>\n      </Tabs>} */}\n\n    </AppBar>\n    <switch>\n      <Route path=\"/\" component={HomeComponent} auth={Auth.auth}/>\n      <ProtectedStudyCntrLogin path=\"/studyCntrLogin\" component={StudyCntrLogin} auth={Auth.auth} />\n      <ProtectedNodalLogin path=\"/nodalLogin\" component={NodalLogin} auth={Auth.auth} />\n      <ProtectedNodalRoute path=\"/nodalDashboard\" auth={Auth.auth} component={NodalDashboard} />\n      <ProtectedStudyCntrRoute path=\"/studyCntrDashboard\" auth={Auth.auth} component={StudyCntrDashboard} />\n    </switch>\n    </div>\n  )\n}\n\nconst ProtectedStudyCntrRoute = ({auth, component: Component, ...rest}) => {\n  return(\n    <Route\n    {...rest}\n    render = {() => auth? (\n      <Component />\n      \n    ): (\n      <Redirect to=\"/studyCntrLogin\" />\n    )\n    }\n    />\n  )\n}\n\nconst ProtectedNodalRoute = ({auth, component: Component, ...rest}) => {\n  return(\n    <Route\n    {...rest}\n    render = {() => auth? (\n      <Component />\n      \n    ): (\n      <Redirect to=\"/nodalLogin\" />\n    )\n    }\n    />\n  )\n}\n\nconst ProtectedNodalLogin = ({auth, component: Component, ...rest}) => {\n  return(\n    <Route\n    {...rest}\n    render = {() => !auth? (\n      <Component />\n    ): (\n      <Redirect to=\"/nodalDashboard\" />\n    )\n    }\n    />\n  )\n}\n\nconst ProtectedStudyCntrLogin = ({auth, component: Component, ...rest}) => {\n  return(\n    <Route\n    {...rest}\n    render = {() => !auth? (\n      <Component />\n    ): (\n      <Redirect to=\"/studyCntrDashboard\" />\n    )\n    }\n    />\n  )\n}\n\n\nexport default App;\n","/home/discovery/Documents/onlineapp/svuapp/frontend/src/StudenRecords.js",["186","187","188","189","190","191","192"],"import React, { useState } from \"react\";\n\nimport { Table, Column, DataCell } from 'fixed-data-table-2';\nimport Button from \"@material-ui/core/Button\";\n\nclass StudentRecords extends React.Component {\n \n    constructor(props){\n    super(props);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n    }\n    \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n        }\n    \n    getHeader = function(){\n            var keys = this.getKeys();\n            return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n            })\n    }\n    \n    RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n            \n        return(<td key={props.data[key]}>{props.data[key]}</td>)\n        })\n    }\n\n    getRowsData = function() {\n        var items = this.props.data;\n        var keys = this.getKeys();\n        console.log(\"keys --> \" + keys);\n        console.log(\"items --> \" + items);\n        return items.map((row, index)=>{\n            console.log(\"row --> \" + row.status);\n            let student = \"\";\n\n            let paymentPending = false;\n            if(row.status === \"Payment pending\") {\n                console.log(\"toggling Payment pending\");\n                paymentPending = true;\n            }\n            return( \n                <tr key={index}>\n                    <RenderRow key={index} data={row} keys={keys}>\n                    {paymentPending \n                    && <td>\n                        <p>Button</p>\n                    </td>\n                    } \n                    </RenderRow>\n                </tr>)\n        })\n    }\n    \n    render() {\n    return (\n    <div>\n    <table>\n    <thead>\n    <tr>{this.getHeader()}</tr>\n    </thead>\n    <tbody>\n    {this.getRowsData()}\n    </tbody>\n    </table>\n    </div>\n    \n    );\n    }\n   }\n\n   const handlePay = (data) => {\n        console.log(\"Update payment for student --> \" + data)\n   }\n\n   const RenderRow = (props) =>{\n    return props.keys.map((key, index)=>{\n        \n    return(\n\n            \n            <td key={props.data[key]}>{props.data[key]}</td> \n        \n        )\n        })\n    \n   }\n   \n\nexport default StudentRecords",["193","194"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/reportWebVitals.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/FormModal.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/ModalComponent.js",[],["195","196"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/FormComponent.js",["197"],"import React from 'react'\nimport {Button} from 'react-bootstrap'\nexport default class FormComponent extends React.Component {\n    constructor(){\n        this.state={\n            submitButtonToggle: true,\n            username: ''\n        }\n    }\n\n    inputHandler=(e)=>{\n        if(e){\n            this.setState({\n                username: e.target.value\n            })\n        }\n    }\n\n    render(){\n        return(\n            <div>\n                <input type='text' value='this.state.username' id='username' onChange='inputHandler' />\n                <Button title='Submit' disabled={this.state.username.length > 0}> </Button>\n            </div>\n        )\n    }\n}","/home/discovery/Documents/onlineapp/svuapp/frontend/src/NodalDashboard.js",["198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270"],"import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from 'react-router-dom';\nimport { AppBar, Tabs, Tab } from '@material-ui/core';\nimport AuthApi from \"./AuthApi\";\nimport Cookies, { set } from 'js-cookie';\nimport OtpInput from 'react-otp-input';\nimport {Button, Modal} from 'react-bootstrap'\nimport RespModal from 'react-responsive-modal';\nimport { useState, useEffect } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Grid from \"@material-ui/core/Grid\";\n\n\nimport BetterUser from './BetterUser'\nimport ApplicationForm from './ApplicationForm';\nimport StudentRecords from './StudenRecords';\nimport usePromise from \"react-promise\";\n\nimport './custom-modal.css';\nimport { getDefaultLocale } from 'react-datepicker';\nimport * as ReactBootStrap from 'react-bootstrap';\n\nimport ReactDOM from \"react-dom\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import \"bootstrap/dist/css/bootstrap-theme.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"./styles.css\";\nimport {Col, Row} from 'react-bootstrap';\nimport Container from \"@material-ui/core/Container\";\nimport classes from './styles.css';\nimport FormModal from './FormModal';   \nimport ModalComponent from './ModalComponent'\nimport {Table, Form} from 'react-bootstrap';\nimport Select from \"react-select\";\nimport './reactselect.css'\nimport { ValidatorForm, TextValidator } from 'react-material-ui-form-validator';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n  },\n  textField: {\n      width: 300,\n      margin: 100,\n  },\n  //style for font size\n  resize:{\n    fontSize:50\n  }\n  }));\n\nconst backdropStyle = {\n    position: 'fixed',\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.3)',\n    padding: 50\n  };\n  \n  const selectStyles = {\n    control: (base) => ({\n      ...base,\n      minHeight: 32,\n      minWidth: 32\n    }),\n    dropdownIndicator: (base) => ({\n      ...base,\n      paddingTop: 0,\n      paddingBottom: 0,\n    }),\n    clearIndicator: (base) => ({\n      ...base,\n      paddingTop: 0,\n      paddingBottom: 0,\n    }),\n  };\n  \n  const useDateStyles = makeStyles((theme) => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200,\n    },\n  }));\n\n  const columns = [{\n    dataField: 'student_id',\n    text: 'Student ID'\n  }, {\n    dataField: 'name',\n    text: 'Student Name'\n  }, {\n    dataField: 'gender',\n    text: 'Gender'\n  },\n  {\n    dataField: 'aadhar_no',\n    text: 'Aadhar No.'\n  },\n  {\n    dataField: 'mobileNo',\n    text: 'Mobile No.'\n  },\n  {\n    dataField: 'registrationNo',\n    text: 'Registration No'\n  },\n  {\n    dataField: 'courseName',\n    text: 'Course Name'\n  }];\n\n  const courses = [\n    {\n      value: 'course1',\n      label: 'Course 1',\n    },\n    {\n      value: 'course2',\n      label: 'Course 2',\n    },\n    {\n      value: 'course3',\n      label: 'Course 3',\n    },\n    {\n      value: 'course4',\n      label: 'Course 4',\n    },\n  ];\n  \n  const coursesFromDB = [];\n  \n  const genders = [\n    {\n      value: 'male',\n      label: 'Male',\n    },\n    {\n      value: 'female',\n      label: 'Female',\n    }\n  ];\n  \n  const mediums = [\n    {\n      value: 'english',\n      label: 'English',\n    },\n    {\n      value: 'telugu',\n      label: 'Telugu',\n    }\n  ];\n  \n  const maritalStatuses = [\n    {\n      value: 'unmarried',\n      label: 'Unmarried',\n    },\n    {\n      value: 'married',\n      label: 'Married',\n    }\n  ];\n  \n  \n  \n  const religions = [\n    {\n      value: 'hindu',\n      label: 'Hindu',\n    },\n    {\n      value: 'muslim',\n      label: 'Muslim',\n    },\n    {\n      value: 'christian',\n      label: 'Christian',\n    },\n    {\n      value: 'sikh',\n      label: 'Sikh',\n    },\n    {\n      value: 'others',\n      label: 'Others'\n    }\n  ];\n  \n  const castes = [\n    {\n      value: 'oc',\n      label: 'OC',\n    },\n    {\n      value: 'bc',\n      label: 'BC',\n    },\n    {\n      value: 'sc',\n      label: 'SC',\n    },\n    {\n      value: 'st',\n      label: 'ST',\n    },\n    {\n      value: 'others',\n      label: 'Others'\n    }\n  ];\n  \n  const residentialStatuses = [\n    {\n      value: 'urban',\n      label: 'Urban',\n    },\n    {\n      value: 'rural',\n      label: 'Rural',\n    },\n    {\n      value: 'tribal',\n      label: 'Tribal',\n    }\n  ];\n  \n  const phCategories = [\n    {\n      value: 'no',\n      label: 'No',\n    },\n    {\n      value: 'yes',\n      label: 'Yes',\n    }\n  ];\n\n  const feeFromDB = [];\n\n  var formData = {};\n\nfunction NodalDashboard() {\n  const [auth, setAuth] = React.useState(false);\n  const Auth = React.useContext(AuthApi);\n  const [studentData, setStudentData] = React.useState({});\n  const [courseData, setCourseData] = React.useState([]);\n  const [courseFetched, setCourseFetched] = React.useState(false);\n  const [value, setValue] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n  \n  const [show, setShow] = React.useState(false);\n  const [modal, setModal] = React.useState(false);\n  const [dataExists, setDataExists] = React.useState(false);\n  const [loaded, setLoaded] = React.useState(false);\n  const [fetchFinished, setFetchFinished] = React.useState(false);\n  const [showModal, setShowModal] = React.useState(false);\n  const [modalShowToggle, setModalShowToggle] = React.useState(false);\n\n  \n  const classes = useStyles();\n  const dateClasses = useDateStyles();\n\n\n  const [course, setCourse] = React.useState({value: 'course1', label: 'Course'});\n  const [studyCenterOptedCode, setStudyCenterOptedCode] = React.useState();\n  const [name, setName] = React.useState(\"\");\n  const [fatherName, setFatherName] = React.useState(\"\");\n  const [aadharNo, setAadharNo] = React.useState('');\n  const [doorNo, setDoorNo] = React.useState('');\n  const [street, setStreet] = React.useState('');\n  const [village, setVillage] = React.useState('');\n  const [mandal, setMandal] = React.useState('');\n  const [district, setDistrict] = React.useState('');\n  const [pincode, setPincode] = React.useState('');\n  const [email, setEmail] = React.useState('');\n  const [courseID, setCourseID] = React.useState('');\n\n  const [gender, setGender] = React.useState('');\n  const [medium, setMedium] = React.useState('');\n  const [secondLanguageOpted, setSecondLanguageOpted] = React.useState('');\n  const [dob, setDob] = React.useState(Date(\"1978-04-02T21:11:54\"));\n  const [maritalStatus, setMaritalStatus] = React.useState('');\n  const [nationality, setNationality] = React.useState('Indian');\n  \n  const [religion, setReligion] = React.useState('');\n  const [caste, setCaste] = React.useState('');\n  const [residential, setResidential] = React.useState('');\n  const [phCategory, setPhCategory] = React.useState('');\n  const [qualifyingExamination, setQualifyingExamination] = React.useState('');\n  const [university, setUniversity] = React.useState('');\n  const [yearAndMonthPasssing, setYearAndMonthPassing] = React.useState(Date(\"1978-04-02T21:11:54\"));\n  const [groupSubjects, setGroupSubjects] = React.useState('');\n  const [maxMarks, setMaxMarks] = React.useState('');\n  const [marksObtained, setMarksObtained] = React.useState('');\n  const [percentageOfMarks, setPercentageOfMarks] = React.useState('');\n  const [feeAmount, setFeeAmount] = React.useState('');\n  const [challanId, setChallanId] = React.useState('challanId');\n  const [challanDate, setChallanDate] = React.useState(Date(\"2021-01-01T21:11:54\"));\n  const [bankName, setBankName] = React.useState('bankName');\n  const [declarationChecked, setDeclarationChecked] = React.useState('');\n  const [paymentStatus, setPaymentStatus] = React.useState('paymentStatus');\n//   const [values, setValues] = React.useState(initialFomValues);\n  const [districtState, setDistrictState] = React.useState(\"\");\n  const [eligibilityMarks, setEligibilityMarks] = React.useState(\"\");\n  const [image, setImage] = React.useState(\"\");\n  const [signature, setSignature] = React.useState(\"\");\n  const [phone, setPhone] = React.useState(\"\");\n\n  const[saveSuccess, setSaveSuccess] = React.useState(false);\n\n  useEffect(() => {\n    console.log(\"Hi! from NodalDashboard useEffect()\")\n    // readCookie();\n    loadData();\n    //getData()\n  }, [])\n\n  const loadData = () => {\n    let studentID = Cookies.get(\"studentId\");\n    if(studentID !== undefined) {\n    console.log(\"fetching studing data for --> \" + studentID)\n    let endPoint = \"http://localhost:8080/api/v1/\" + studentID;\n    let result = false;\n    fetch(endPoint).then(resp => resp.json())\n        .then(receivedData => {\n          console.log(\"received data --> \" + JSON.stringify(receivedData));\n          setStudentData(receivedData);\n        });\n    } else {\n        console.log(\"studentID is undefined\");\n    }\n    setLoaded(true);\n  }\n\n  const handleClose = () => {\n    setShow(false);\n    loadData();\n  }\n    const handleShow = () => {\n      console.log(\"Rendering Form modal\")\n      // Fetch courses\n    let endPoint = \"http://localhost:8080/api/v1/courses\";\n    let result = false;\n    fetch(endPoint).then(resp => resp.json())\n        .then(receivedData => {\n          // console.log(\"received Course structures --> \" + JSON.stringify(receivedData));\n          setCourseData(receivedData.map(coursesData => ({\n            courseID: coursesData.courseID,\n            courseSubject: coursesData.courseSubject,\n            firstYearFee: coursesData.firstYearFee,\n          })));\n          // console.log(JSON.stringify(courseData));\n          setCourseFetched(true);\n        });\n    console.log(courseFetched);\n    if(courseFetched) {\n      var data = '{ \"courses\": '+ JSON.stringify(courseData) + '}';\n      console.log(data);\n      var coursesArr = JSON.parse(data);\n      // console.log(\"course data --> \" + coursesArr.courses[0] + \"course length --> \" + coursesArr.courses.length);\n      var list = coursesArr.courses.length;\n      var courseJson = {};\n      var feeJson = {}\n      for (var i = 0; i < list; i++) {\n        var counter = coursesArr.courses[i];\n        var id=counter.courseID;\n        var name = counter.courseSubject;\n        var fee = counter.firstYearFee;\n        //\n        courseJson[\"value\"] = id;\n        courseJson[\"label\"] = name;\n       \n        console.log(courseJson);\n        coursesFromDB.push(courseJson)\n        courseJson = {};\n\n        //Fee details\n        feeJson[\"value\"] = id;\n        feeJson[\"label\"] = fee;\n       \n        console.log(feeJson);\n        feeFromDB.push(feeJson)\n        feeJson = {};\n      }\n      \n        var a = JSON.stringify(feeFromDB);\n        console.log(\"Fee data in a --> \" + a);\n        a = JSON.stringify(coursesFromDB);\n        console.log(\"Courses data in a --> \" + a);\n    \n    }\n    setShow(true);\n    }\n    const handleOnClick = () => {\n      Auth.setAuth(false);\n      Cookies.remove(\"user\");\n      Cookies.remove(\"nodalUser\");\n      Cookies.remove(\"studentFound\");\n      Cookies.remove(\"studentId\");\n      window.studyCntrLoggedIn = false;\n      window.nodalLoggedIn = false;\n      window.homePage = true;\n    }\n  \n    \n\n    const calculatePercentage = () => {\n        var marksObtainedInt = Number(marksObtained);\n        var maxMarksInt = Number(maxMarks);\n        var percentile = ((marksObtainedInt / maxMarksInt) * 1000);\n        \n        percentile = ( percentile.toString());\n        console.log(\"Marks obtained Integer --> \" + marksObtainedInt)\n        console.log(\"Max Marks Integer --> \" + maxMarksInt)\n        console.log(\"Percentage Marks --> \" + percentile)\n        setPercentageOfMarks(percentile);\n      }\n    \n      const handleStudyCenterOptedCode = (event) => {\n        // console.log(event.target.value)\n        // let val = event.target.value;\n        \n        // event.preventDefault();\n        console.log(event.target.value)\n        // console.log(value);\n        setStudyCenterOptedCode(event.target.value)\n      }\n    \n      const handleCourseChange = (course) => {\n        console.log(\"Course Id selected\" + course.value);\n        console.log(\"Course Name --> \" + course.label);\n        setCourseID(course.value);\n        setCourse(course.label);\n        var courseId = course.value;\n        for(var i = 0; i < feeFromDB.length; i++) {\n          var obj = feeFromDB[i];\n          if(obj.value === courseId) {\n            console.log(\"Fee for Course \" + courseId  + \" is \" + obj.label);\n            setFeeAmount(obj.label);\n          }\n      }\n        // setFeeAmount()\n      }\n    \n      const handleNameChange = (event) => {\n        console.log(event.target.value)\n        setName(event.target.value)\n      }\n    \n      const handleFatherName = (event) => {\n        console.log(event.target.value)\n        setFatherName(event.target.value)\n      }\n    \n      const handleAadharNo = (event) => {\n        console.log(event.target.value)\n        setAadharNo(event.target.value)\n      }\n    \n      const handleDoorNo = (event) => {\n        console.log(event.target.value)\n        setDoorNo(event.target.value)\n      }\n    \n      const handleStreet = (event) => {\n        console.log(event.target.value)\n        setStreet(event.target.value)\n      }\n    \n      const handleVillage = (event) => {\n        console.log(event.target.value)\n        setVillage(event.target.value)\n      }\n    \n      const handleMandal = (event) => {\n        console.log(event.target.value)\n        setMandal(event.target.value)\n      }\n    \n      const handleDistrict = (event) => {\n        console.log(event.target.value)\n        setDistrict(event.target.value)\n      }\n    \n      const handleDistrictState = (event) => {\n        console.log(event.target.value)\n        setDistrictState(event.target.value)\n      }\n    \n      const handlePincode = (event) => {\n        console.log(event.target.value)\n        setPincode(event.target.value)\n      }\n    \n      const handlePhone = (event) => {\n        console.log(event.target.value)\n        setPhone(event.target.value)\n      }\n    \n      const handleEmail = (event) => {\n        console.log(event.target.value)\n        setEmail(event.target.value)\n      }\n    \n      const handleGenderChange = (gender) => {\n        console.log(\"Gender selected\" + gender.value);\n        setGender(gender.value)\n      }\n    \n      const handleMedium = (medium) => {\n        console.log(medium.value)\n        setMedium(medium.value)\n      }\n    \n      const handleSecondLanguageOpted = (event) => {\n        console.log(event.target.value)\n        setSecondLanguageOpted(event.target.value)\n      }\n      \n    \n      const handleDOB = (event) => {\n        console.log(event.target.value)\n        setDob(event.target.value)\n      }\n    \n      const handleMaritalStatus = (maritalStatus) => {\n        console.log(\"maritalStatus selected\" + maritalStatus.value);\n        setMaritalStatus(maritalStatus.value);\n      }\n    \n      const handleNationality = (event) => {\n        setNationality(nationality);\n      }\n    \n      const handleReligion = (religion) => {\n        console.log(\"Religion selected\" + religion.value);\n        setReligion(religion.value);\n      }\n    \n      const handleCaste = (caste) => {\n        console.log(\"caste selected\" + caste.value);\n        setCaste(caste.value);\n      }\n    \n      const handleResidentialStatus = (residential) => {\n        console.log(\"Residential selected\" + residential.value);\n        setResidential(residential.value);\n      }\n    \n      const handlePhCategory = (phCategory) => {\n        console.log(\"phCategory selected\" + phCategory.value);\n        setPhCategory(phCategory.value);\n      }\n    \n      const handleQualifyingExam = (event) => {\n        console.log(event.target.value)\n        setQualifyingExamination(event.target.value)\n      }\n    \n      const handleUniversity = (event) => {\n        console.log(event.target.value)\n        setUniversity(event.target.value)\n      }\n    \n      const handleYearAndMonth= (event) => {\n        console.log(event.target.value)\n        setYearAndMonthPassing(event.target.value)\n      }\n    \n      const handleGroupSubjects = (event) => {\n        console.log(event.target.value)\n        setGroupSubjects(event.target.value)\n      }\n    \n      const handleMaxMarks = (event) => {\n        console.log(event.target.value)\n        setMaxMarks(event.target.value)\n      }\n    \n      const handleMarksObtained = (event) => {\n        setMarksObtained(event.target.value)\n        calculatePercentage(event.target.value);\n      }\n    \n      const handlePercentageOfMarks = (percentageOfMarks) => {\n        setPercentageOfMarks(percentageOfMarks)\n      }\n    \n      const handleEligibilityMarks = (event) => {\n        console.log(event.target.value)\n        setEligibilityMarks(event.target.value)\n      }\n    \n      const handleFeeAmount = (feeAmount) => {\n        setFeeAmount(feeAmount)\n      }\n    \n      const handleDeclarationChecked = (event) => {\n        console.log(event.target.value)\n        setDeclarationChecked(event.target.value)\n      }\n    \n      const handleImage = (event) => {\n        console.log(event.target.value)\n        setImage(event.target.value)\n      }\n    \n      const handleSignature = (event) => {\n        console.log(event.target.value)\n        setSignature(event.target.value)\n      }\n\n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(\"course id --> \" + courseData.courseID)\n        var formDataJson = {};\n        formDataJson[\"appSerialNo\"] = \"120\"; //- missing in form\n        formDataJson[\"applicationNo\"] = \"120\"; //- missing in form\n        formDataJson[\"baGroupId\"] = \"\"; //- missing in form\n        formDataJson[\"monthYear\"] = yearAndMonthPasssing;\n        formDataJson[\"fees\"] = feeAmount;\n        formDataJson[\"caste\"] = caste;\n        formDataJson[\"courseId\"] = courseID; //- missing - should go in json\n        formDataJson[\"medium\"] = medium; //- missing\n        formDataJson[\"courseName\"] = course;\n        formDataJson[\"degree\"] = \"\"; //- not required\n        formDataJson[\"districtState\"] = districtState;\n        formDataJson[\"dob\"] = dob;\n        formDataJson[\"doorNo\"] = doorNo;\n        formDataJson[\"eligibilityMarks\"] = eligibilityMarks;\n        formDataJson[\"emailID\"] = email;\n        formDataJson[\"enrolmentNo\"] = \"abcxyz123\"; //- missing - not in form\n        formDataJson[\"fatherName\"] = fatherName;\n        formDataJson[\"gender\"] = gender;\n        formDataJson[\"groupSubjects\"] = groupSubjects;\n        formDataJson[\"hallTicketNo\"] = \"zyxabc120\"; //- missing - not in form\n        formDataJson[\"image\"] = \"\";\n        formDataJson[\"location\"] = \"\";\n        formDataJson[\"mandal\"] = mandal;\n        formDataJson[\"marksObtained\"] = marksObtained;\n        formDataJson[\"maritalStatus\"] = maritalStatus;\n        formDataJson[\"maxMarks\"] = maxMarks;\n        formDataJson[\"name\"] = name;\n        formDataJson[\"nationality\"] = nationality;\n        formDataJson[\"ousEducation\"] = \"\"; //- missing - unknown\n        formDataJson[\"percentageMarks\"] = percentageOfMarks;\n        formDataJson[\"phone\"] = phone;\n        formDataJson[\"pincode\"] = pincode;\n        formDataJson[\"printCount\"] = \"\";\n        formDataJson[\"qualifyingExam\"] = qualifyingExamination;\n        formDataJson[\"registrationNo\"] = //- missing - need to generate\n        formDataJson[\"religion\"] = religion;\n        formDataJson[\"residentialArea\"] = residential;\n        formDataJson[\"secondLanguage\"] = secondLanguageOpted;\n        formDataJson[\"signature\"] = \"\";\n        formDataJson[\"street\"] = street;\n        formDataJson[\"university\"] = university;\n        formDataJson[\"village\"] = village;\n        formDataJson[\"active\"] = true; //- missing - should go in json\n        formDataJson[\"approve\"] = false; //- missing - should go in json\n        // formDataJson[\"codeNo\"] = studyCenterOptedCode; // - studycenter code \n        formDataJson[\"mobileNo\"] = phone;\n        formDataJson[\"aadhar_no\"] = aadharNo;\n        formDataJson[\"phCategory\"] = phCategory;\n      console.log(\"Form Data JSON --> \" + JSON.stringify(formDataJson))\n      formData = formDataJson;\n      console.log(\"Form Data --> \" + JSON.stringify(formData));\n    \n      //http://localhost:8080/api/v1/createStudentByStudyCenter/1\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      };\n      let result = \"\";\n      let endPoint = \"http://localhost:8080/api/v1/createStudentByStudyCenter/1\";\n      const response = await fetch(endPoint, requestOptions)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data);\n          result = JSON.stringify(data);\n          Cookies.set(\"studentFound\", \"true\");\n          Cookies.set(\"studentId\", data.student_id);\n          setSaveSuccess(true);\n          console.log(\"Form successfully saved :), closing form window...!\");\n          console.log(\"student id --> \" + data.student_id);\n          handleClose();\n        })    \n        .catch(error => console.log(\"Error detected: \" + error));\n        //console.log(\"got response --> \" + result);\n    \n      }\n  \n    if( !loaded ) {\n        loadData();\n        return(\n            <div>loading...</div>\n        )\n    } else {\n      var found = false;\n      console.log(\"Student found --> \" + Cookies.get(\"studentFound\") );\n      if(Cookies.get(\"studentFound\") === \"true\") {\n        console.log(\"Student found!\" );\n        found = true;\n      }\n    return(\n    //   <div style={{}}>\n    //     <div style={{float: 'right'}}>\n    //       <button onClick={handleOnClick}>Logout</button>\n    //     </div>\n    //     {found? <div style={{clear: 'both'}}>\n    //         <h1>{Cookies.get(\"studentId\")}</h1></div>:\n    //       <ApplicationForm />}\n  \n        \n    //   </div>\n\n        <>\n        <div>\n        <div style={{float: 'right'}}>\n            <button onClick={handleOnClick}>Logout</button>\n        </div>\n        <div>\n            { found ? <div>\n            <h1>Welcome {studentData.name}</h1>\n                <h3>Application Details</h3>\n          <Table className=\"mt-4\" striped bordered hover>\n            <thead>\n              <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Gender</th>\n                <th>AAdhar No.</th>\n                <th>Mobile No.</th>\n                <th>Registration No.</th>\n                <th>Course Applied</th>\n              </tr>\n            </thead>\n            <tbody>\n                <tr>\n                <td>{studentData.student_id}</td>\n                <td>{studentData.gender}</td>\n                <td>{studentData.aadhar_no}</td>\n                <td>{studentData.mobileNo}</td>\n                <td>{studentData.registrationNo}</td>\n                <td>{studentData.courseName}</td>\n                </tr>\n            </tbody>\n          </Table>\n          {/* <BootstrapTable keyField=\"name\" data={studentData} columns={columns} /> */}\n        </div>\n        : <div>\n            <h1>Click below to apply online for Admission</h1>\n            <button onClick={handleShow}>New Application</button>\n          </div>\n        }\n        </div>\n\n  {/* <ModalComponent show={modalShowToggle}></ModalComponent> */}\n  {/* <FormModal showModal={showModal} hideModalHandler={hideModalHandler}></FormModal> */}\n  {/* <ModalWithGrid show={show} onHide={() => {setShow(false)}}/> */}\n  <Modal show={show} animation={false} onHide={handleClose} \n    size=\"lg\"\n    aria-labelledby=\"contained-modal-title-vcenter\"\n    className=\"my-modal-lg\"\n    dialogClassName=\"modal-full\"\n    bsClass=\"modal-full\"\n    centered\n    >\n<Modal.Header closeButton cssModule={{'modal-title': 'w-100 text-center'}}>\n<Modal.Title id=\"contained-modal-title-vcenter\">\nApplication Form\n</Modal.Title>\n</Modal.Header>\n<Modal.Body>\n<Container>\n<ValidatorForm id=\"myForm\" onSubmit={handleFormSubmit}\nonError={errors => console.log(errors)}>\n<Row>\n\n{/* <Col xs={5} md={6}>\n  <TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"studyCenterOptedCode\"\n    label=\"Study Center opted with Code No.\"\n    name=\"studyCenterOptedCode\"\n    value={studyCenterOptedCode}\n    defaultValue=\"001\"\n    onChange={(event, value) => handleStudyCenterOptedCode(event)}\n    // autoFocus\n  />\n  \n  </Col> */}\n  </Row>\n  <Row>\n<Col xs={10} md={3}>\n<p>Course Applied</p>\n<Select options={coursesFromDB} \n  maxWidth={50}\n  // value={course}\n  onChange={handleCourseChange}\n  className=\"Select-menu-outer\"\n/>\n</Col >\n</Row>\n<Row>\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    id=\"name\"\n    label=\"Name\"\n    name=\"name\"\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    value={name}\n    placeholder=\"First Name\"\n    onChange={(event, value) => handleNameChange(event)}\n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"fatherName\"\n    label=\"Father's Name\"\n    name=\"fatherName\"\n    onChange={(event, value) => handleFatherName(event)}\n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"aadharNo\"\n    label=\"Aadhar No.\"\n    name=\"aadharNo\"\n    onChange={(event, value) => handleAadharNo(event)}\n  />\n</Col>\n</Row>\n<Row>\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"doorNo\"\n    label=\"Door No.\"\n    name=\"Door No.\"\n    onChange={(event, value) => handleDoorNo(event)}\n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"street\"\n    label=\"Street\"\n    name=\"Street\"\n    onChange={(event, value) => handleStreet(event)}\n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"village\"\n    label=\"Village/Post\"\n    name=\"village\"\n    onChange={(event, value) => handleVillage(event)}  \n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"mandal\"\n    label=\"Mandal/Town\"\n    name=\"mandal\"\n    onChange={(event, value) => handleMandal(event)}\n    \n  />\n</Col>\n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"district\"\n    label=\"District\"\n    name=\"district\"\n    onChange={(event, value) => handleDistrict(event)}\n/>\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"districtState\"\n    label=\"State\"\n    name=\"districtState\"\n    type=\"districtState\"\n    onChange={(event, value) => handleDistrictState(event)}\n  />\n</Col> \n\n<Col xs={10} md={3}>\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    // fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"pincode\"\n    label=\"Pincode\"\n    name=\"pincode\"\n    onChange={(event, value) => handlePincode(event)}\n/>\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"phone\"\n    label=\"Mobile Number\"\n    name=\"phone\"\n    type=\"phone\"\n    onChange={(event, value) => handlePhone(event)}\n  />\n</Col> \n\n<Col xs={10} md={4} >\n<TextValidator\n    variant=\"outlined\"\n    margin=\"normal\"\n    // required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    // id=\"email\"\n    label=\"Email Address\"\n    name=\"email\"\n    // type=\"email\"\n    value={email}\n    validators={['required', 'isEmail']}\n    errorMessages={['this field is required', 'email is not valid']}\n    onChange={(event, value) => handleEmail(event)}\n  />\n</Col>  \n</Row>\n<Row>\n<Col xs={10} md={3}>\n<p>Gender</p>\n<Select options={genders} \n  maxWidth={50}\n  onChange={handleGenderChange}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n<Col xs={10} md={3}>\n<p>Medium</p>\n<Select options={mediums} \n  maxWidth={50}\n  onChange={handleMedium}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"secondaryLangauage\"\n    label=\"Secondary Language Opted\"\n    name=\"secondaryLangauage\"\n    onChange={(event, value) => handleSecondLanguageOpted(event)}\n  />\n</Col>\n\n</Row>\n<Row>\n<Col xs={13} md={3} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    // onChange={this.handleDOB}\n    id=\"nationality\"\n    label=\"Nationality\"\n    name=\"nationality\"\n    autoComplete=\"INDIAN\"\n    disabled\n    value={nationality}   \n  />\n</Col>\n</Row> \n<Row>\n<Col xs={13} md={2}>\n<p>Marital Status</p>\n<Select options={maritalStatuses} \n  maxWidth={50}\n  onChange={handleMaritalStatus}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n\n<Col xs={10} md={2} >\n<TextField\n  id=\"date\"\n  label=\"Date of Birth\"\n  type=\"date\"\n  defaultValue=\"1960-01-01\"\n  InputLabelProps={{style: {fontSize: 13}}}\n  className={dateClasses.textField}\n  InputLabelProps={{\n  shrink: true,\n  }}\n  onChange={(event, value) => handleDOB(event)}\n/>\n</Col>\n\n</Row>\n\n<Row>\n<Col xs={13} md={3} >\n<TextField\n    variant=\"standard\"\n    margin=\"normal\"\n    required\n    fullWidth\n    // onChange={this.handleDOB}\n    id=\"\"\n    label=\"\"\n    name=\"\"\n    disabled\n    // value={}    \n  />\n</Col>\n</Row>\n\n<Row>\n<Col xs={13} md={3} >\n<TextField\n    variant=\"standard\"\n    margin=\"normal\"\n    required\n    fullWidth\n    // onChange={this.handleDOB}\n    id=\"\"\n    label=\"\"\n    name=\"\"\n    disabled\n    hidden\n    // value={}    \n  />\n</Col>\n</Row>\n\n\n<Row>\n\n<Col xs={10} md={3}>\n<p>Religion</p>\n<Select options={religions} \n  maxWidth={50}\n  onChange={handleReligion}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n\n<Col xs={10} md={3}>\n<p>Caste</p>\n<Select options={castes} \n  maxWidth={50}\n  onChange={handleCaste}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n<Col xs={10} md={3}>\n<p>Residential Status</p>\n<Select options={residentialStatuses} \n  maxWidth={50}\n  onChange={handleResidentialStatus}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n<Col xs={10} md={2}>\n<p>PH Category?</p>\n<Select options={phCategories} \n  maxWidth={50}\n  onChange={handlePhCategory}\n  className=\"Select-menu-outer\"\n/>\n</Col>\n</Row>\n\n<Row>\n\n\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"qualifyingExam\"\n    label=\"Qualifying Examination\"\n    name=\"qualifyingExam\"\n    onChange={(event, value) => handleQualifyingExam(event)}\n  />\n</Col>\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"university\"\n    label=\"University\"\n    name=\"university\"\n    onChange={(event, value) => handleUniversity(event)}\n  />\n</Col>\n</Row>\n<Row>\n<Col xs={10} md={2} >\n<TextField\n  id=\"date\"\n  label=\"Year and Month Passing\"\n  type=\"date\"\n  defaultValue=\"1960-01-01\"\n  InputLabelProps={{style: {fontSize: 13}}}\n  className={dateClasses.textField}\n  InputLabelProps={{\n  shrink: true,\n  }}\n  onChange={(event, value) => handleYearAndMonth(event)}\n/>\n</Col>\n</Row>\n<Row>\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    label=\"Group Subjects\"\n    name=\"groupSubjects\"\n    placeholder=\"subject1, subject2,...\"\n    value={groupSubjects}\n    onChange={(event, value) => handleGroupSubjects(event)}\n  />\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    // id=\"maxMarks\"\n    label=\"Max Marks\"\n    name=\"maxMarks\"\n    value={maxMarks}\n    onChange={(event, value) => handleMaxMarks(event)}\n  />\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"marksObtained\"\n    label=\"Marks Obtained\"\n    name=\"marksObtained\"\n    value={marksObtained}\n    onChange={(event) => handleMarksObtained(event)}\n  />\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"percentage\"\n    label=\"Percentage\"\n    name=\"percentage\"\n    value={percentageOfMarks}\n    disabled\n  />\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"feeAmount\"\n    label=\"Fee Amount\"\n    name=\"feeAmount\"\n    value={feeAmount}\n    disabled\n    \n  />\n</Col>\n\n<Col xs={10} md={4} >\n<TextField\n    variant=\"outlined\"\n    margin=\"normal\"\n    required\n    fullWidth\n    InputLabelProps={{style: {fontSize: 13}}}\n    InputProps={{style: {fontSize: 13}}}\n    id=\"paymentStatus\"\n    label=\"Payment Status\"\n    name=\"paymentStatus\"\n    disabled\n  />\n</Col>\n\n</Row>\n\n<Form.Row>\n<Form.Group as={Col} id=\"formGridCheckbox\">\n<Form.Check id=\"declarataion\"\n    name=\"declaration\" \n    type=\"checkbox\" \n    label=\"Declaration\"\n    onChange={(event) => handleDeclarationChecked(event)} />\n<p>I hereby declare that the particulars given above are correct. In case if they are found to be incorrect\n    at a later date, I submit myself for any action including removal from the rolls and such other disciplinary\n    action under the ACT, the Statues and Ordinances rule of the University, I also agree to abide by the\n    conditions, rules and regulations stipulated by the Directorate of distance Education and the Laws of the\n    university applicable from time to time.</p>\n</Form.Group>\n\n</Form.Row>\n\n\n\n</ValidatorForm>\n</Container>\n</Modal.Body>\n<Modal.Footer>\n<Button form=\"myForm\" key=\"submit\" htmlType=\"submit\" variant=\"primary\" type=\"submit\">\nSubmit\n</Button>\n<Button onClick={handleClose}>Close</Button>\n</Modal.Footer>\n</Modal>\n  </div>  \n</>\n    )\n  }\n}\n\nexport default NodalDashboard;",{"ruleId":"271","severity":1,"message":"272","line":3,"column":20,"nodeType":"273","messageId":"274","endLine":3,"endColumn":26},{"ruleId":"271","severity":1,"message":"275","line":4,"column":3,"nodeType":"273","messageId":"274","endLine":4,"endColumn":9},{"ruleId":"271","severity":1,"message":"276","line":5,"column":3,"nodeType":"273","messageId":"274","endLine":5,"endColumn":8},{"ruleId":"271","severity":1,"message":"277","line":6,"column":3,"nodeType":"273","messageId":"274","endLine":6,"endColumn":11},{"ruleId":"271","severity":1,"message":"278","line":7,"column":3,"nodeType":"273","messageId":"274","endLine":7,"endColumn":7},{"ruleId":"271","severity":1,"message":"279","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"271","severity":1,"message":"280","line":9,"column":18,"nodeType":"273","messageId":"274","endLine":9,"endColumn":22},{"ruleId":"271","severity":1,"message":"281","line":9,"column":24,"nodeType":"273","messageId":"274","endLine":9,"endColumn":27},{"ruleId":"271","severity":1,"message":"282","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":22},{"ruleId":"271","severity":1,"message":"283","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":16},{"ruleId":"271","severity":1,"message":"284","line":14,"column":8,"nodeType":"273","messageId":"274","endLine":14,"endColumn":17},{"ruleId":"271","severity":1,"message":"285","line":15,"column":10,"nodeType":"273","messageId":"274","endLine":15,"endColumn":18},{"ruleId":"271","severity":1,"message":"286","line":19,"column":8,"nodeType":"273","messageId":"274","endLine":19,"endColumn":16},{"ruleId":"271","severity":1,"message":"287","line":20,"column":8,"nodeType":"273","messageId":"274","endLine":20,"endColumn":12},{"ruleId":"271","severity":1,"message":"288","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":18},{"ruleId":"271","severity":1,"message":"289","line":24,"column":8,"nodeType":"273","messageId":"274","endLine":24,"endColumn":23},{"ruleId":"271","severity":1,"message":"290","line":25,"column":8,"nodeType":"273","messageId":"274","endLine":25,"endColumn":22},{"ruleId":"271","severity":1,"message":"291","line":26,"column":8,"nodeType":"273","messageId":"274","endLine":26,"endColumn":18},{"ruleId":"271","severity":1,"message":"292","line":29,"column":10,"nodeType":"273","messageId":"274","endLine":29,"endColumn":26},{"ruleId":"271","severity":1,"message":"293","line":30,"column":13,"nodeType":"273","messageId":"274","endLine":30,"endColumn":27},{"ruleId":"271","severity":1,"message":"294","line":32,"column":8,"nodeType":"273","messageId":"274","endLine":32,"endColumn":16},{"ruleId":"271","severity":1,"message":"295","line":40,"column":8,"nodeType":"273","messageId":"274","endLine":40,"endColumn":15},{"ruleId":"271","severity":1,"message":"296","line":41,"column":8,"nodeType":"273","messageId":"274","endLine":41,"endColumn":17},{"ruleId":"271","severity":1,"message":"297","line":42,"column":8,"nodeType":"273","messageId":"274","endLine":42,"endColumn":22},{"ruleId":"271","severity":1,"message":"298","line":43,"column":9,"nodeType":"273","messageId":"274","endLine":43,"endColumn":14},{"ruleId":"271","severity":1,"message":"299","line":50,"column":7,"nodeType":"273","messageId":"274","endLine":50,"endColumn":20},{"ruleId":"271","severity":1,"message":"300","line":60,"column":7,"nodeType":"273","messageId":"274","endLine":60,"endColumn":19},{"ruleId":"271","severity":1,"message":"301","line":90,"column":7,"nodeType":"273","messageId":"274","endLine":90,"endColumn":14},{"ruleId":"271","severity":1,"message":"302","line":293,"column":10,"nodeType":"273","messageId":"274","endLine":293,"endColumn":14},{"ruleId":"271","severity":1,"message":"303","line":298,"column":10,"nodeType":"273","messageId":"274","endLine":298,"endColumn":15},{"ruleId":"271","severity":1,"message":"304","line":298,"column":17,"nodeType":"273","messageId":"274","endLine":298,"endColumn":25},{"ruleId":"271","severity":1,"message":"305","line":299,"column":10,"nodeType":"273","messageId":"274","endLine":299,"endColumn":14},{"ruleId":"271","severity":1,"message":"306","line":305,"column":10,"nodeType":"273","messageId":"274","endLine":305,"endColumn":23},{"ruleId":"271","severity":1,"message":"307","line":305,"column":25,"nodeType":"273","messageId":"274","endLine":305,"endColumn":41},{"ruleId":"271","severity":1,"message":"308","line":306,"column":10,"nodeType":"273","messageId":"274","endLine":306,"endColumn":19},{"ruleId":"271","severity":1,"message":"309","line":310,"column":9,"nodeType":"273","messageId":"274","endLine":310,"endColumn":16},{"ruleId":"271","severity":1,"message":"310","line":323,"column":10,"nodeType":"273","messageId":"274","endLine":323,"endColumn":18},{"ruleId":"271","severity":1,"message":"311","line":347,"column":10,"nodeType":"273","messageId":"274","endLine":347,"endColumn":19},{"ruleId":"271","severity":1,"message":"312","line":347,"column":21,"nodeType":"273","messageId":"274","endLine":347,"endColumn":33},{"ruleId":"271","severity":1,"message":"313","line":348,"column":10,"nodeType":"273","messageId":"274","endLine":348,"endColumn":21},{"ruleId":"271","severity":1,"message":"314","line":348,"column":23,"nodeType":"273","messageId":"274","endLine":348,"endColumn":37},{"ruleId":"271","severity":1,"message":"315","line":349,"column":10,"nodeType":"273","messageId":"274","endLine":349,"endColumn":18},{"ruleId":"271","severity":1,"message":"316","line":349,"column":20,"nodeType":"273","messageId":"274","endLine":349,"endColumn":31},{"ruleId":"271","severity":1,"message":"317","line":350,"column":10,"nodeType":"273","messageId":"274","endLine":350,"endColumn":28},{"ruleId":"271","severity":1,"message":"318","line":351,"column":10,"nodeType":"273","messageId":"274","endLine":351,"endColumn":23},{"ruleId":"271","severity":1,"message":"319","line":351,"column":25,"nodeType":"273","messageId":"274","endLine":351,"endColumn":41},{"ruleId":"271","severity":1,"message":"320","line":352,"column":10,"nodeType":"273","messageId":"274","endLine":352,"endColumn":16},{"ruleId":"271","severity":1,"message":"321","line":352,"column":18,"nodeType":"273","messageId":"274","endLine":352,"endColumn":27},{"ruleId":"271","severity":1,"message":"322","line":355,"column":10,"nodeType":"273","messageId":"274","endLine":355,"endColumn":15},{"ruleId":"271","severity":1,"message":"323","line":356,"column":10,"nodeType":"273","messageId":"274","endLine":356,"endColumn":19},{"ruleId":"271","severity":1,"message":"324","line":359,"column":9,"nodeType":"273","messageId":"274","endLine":359,"endColumn":20},{"ruleId":"271","severity":1,"message":"325","line":372,"column":9,"nodeType":"273","messageId":"274","endLine":372,"endColumn":26},{"ruleId":"271","severity":1,"message":"326","line":501,"column":9,"nodeType":"273","messageId":"274","endLine":501,"endColumn":26},{"ruleId":"271","severity":1,"message":"327","line":555,"column":9,"nodeType":"273","messageId":"274","endLine":555,"endColumn":32},{"ruleId":"271","severity":1,"message":"328","line":559,"column":9,"nodeType":"273","messageId":"274","endLine":559,"endColumn":31},{"ruleId":"271","severity":1,"message":"329","line":564,"column":9,"nodeType":"273","messageId":"274","endLine":564,"endColumn":24},{"ruleId":"271","severity":1,"message":"330","line":573,"column":9,"nodeType":"273","messageId":"274","endLine":573,"endColumn":20},{"ruleId":"271","severity":1,"message":"331","line":578,"column":9,"nodeType":"273","messageId":"274","endLine":578,"endColumn":24},{"ruleId":"271","severity":1,"message":"332","line":583,"column":9,"nodeType":"273","messageId":"274","endLine":583,"endColumn":19},{"ruleId":"271","severity":1,"message":"333","line":598,"column":7,"nodeType":"273","messageId":"274","endLine":598,"endColumn":24},{"ruleId":"271","severity":1,"message":"334","line":617,"column":9,"nodeType":"273","messageId":"274","endLine":617,"endColumn":15},{"ruleId":"271","severity":1,"message":"335","line":636,"column":9,"nodeType":"273","messageId":"274","endLine":636,"endColumn":22},{"ruleId":"271","severity":1,"message":"336","line":646,"column":9,"nodeType":"273","messageId":"274","endLine":646,"endColumn":23},{"ruleId":"271","severity":1,"message":"337","line":661,"column":9,"nodeType":"273","messageId":"274","endLine":661,"endColumn":21},{"ruleId":"271","severity":1,"message":"334","line":672,"column":9,"nodeType":"273","messageId":"274","endLine":672,"endColumn":15},{"ruleId":"271","severity":1,"message":"338","line":788,"column":9,"nodeType":"273","messageId":"274","endLine":788,"endColumn":17},{"ruleId":"271","severity":1,"message":"339","line":802,"column":9,"nodeType":"273","messageId":"274","endLine":802,"endColumn":15},{"ruleId":"271","severity":1,"message":"340","line":805,"column":7,"nodeType":"273","messageId":"274","endLine":805,"endColumn":15},{"ruleId":"271","severity":1,"message":"341","line":807,"column":7,"nodeType":"273","messageId":"274","endLine":807,"endColumn":18},{"ruleId":"271","severity":1,"message":"342","line":816,"column":11,"nodeType":"273","messageId":"274","endLine":816,"endColumn":27},{"ruleId":"271","severity":1,"message":"343","line":820,"column":11,"nodeType":"273","messageId":"274","endLine":820,"endColumn":27},{"ruleId":"344","severity":1,"message":"345","line":1183,"column":11,"nodeType":"346","endLine":1185,"endColumn":13},{"ruleId":"344","severity":1,"message":"345","line":1307,"column":11,"nodeType":"346","endLine":1309,"endColumn":13},{"ruleId":"347","replacedBy":"348"},{"ruleId":"349","replacedBy":"350"},{"ruleId":"271","severity":1,"message":"351","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"347","replacedBy":"352"},{"ruleId":"349","replacedBy":"353"},{"ruleId":"347","replacedBy":"354"},{"ruleId":"349","replacedBy":"355"},{"ruleId":"347","replacedBy":"356"},{"ruleId":"349","replacedBy":"357"},{"ruleId":"271","severity":1,"message":"285","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"358","line":2,"column":8,"nodeType":"273","messageId":"274","endLine":2,"endColumn":14},{"ruleId":"271","severity":1,"message":"359","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":17},{"ruleId":"271","severity":1,"message":"360","line":13,"column":8,"nodeType":"273","messageId":"274","endLine":13,"endColumn":24},{"ruleId":"271","severity":1,"message":"361","line":15,"column":8,"nodeType":"273","messageId":"274","endLine":15,"endColumn":24},{"ruleId":"271","severity":1,"message":"362","line":16,"column":10,"nodeType":"273","messageId":"274","endLine":16,"endColumn":20},{"ruleId":"271","severity":1,"message":"363","line":17,"column":8,"nodeType":"273","messageId":"274","endLine":17,"endColumn":18},{"ruleId":"271","severity":1,"message":"276","line":19,"column":24,"nodeType":"273","messageId":"274","endLine":19,"endColumn":29},{"ruleId":"271","severity":1,"message":"364","line":55,"column":7,"nodeType":"273","messageId":"274","endLine":55,"endColumn":18},{"ruleId":"271","severity":1,"message":"338","line":315,"column":11,"nodeType":"273","messageId":"274","endLine":315,"endColumn":19},{"ruleId":"347","replacedBy":"365"},{"ruleId":"349","replacedBy":"366"},{"ruleId":"271","severity":1,"message":"275","line":4,"column":3,"nodeType":"273","messageId":"274","endLine":4,"endColumn":9},{"ruleId":"271","severity":1,"message":"367","line":9,"column":56,"nodeType":"273","messageId":"274","endLine":9,"endColumn":65},{"ruleId":"271","severity":1,"message":"282","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":22},{"ruleId":"271","severity":1,"message":"368","line":13,"column":9,"nodeType":"273","messageId":"274","endLine":13,"endColumn":15},{"ruleId":"271","severity":1,"message":"284","line":14,"column":8,"nodeType":"273","messageId":"274","endLine":14,"endColumn":17},{"ruleId":"271","severity":1,"message":"285","line":15,"column":10,"nodeType":"273","messageId":"274","endLine":15,"endColumn":18},{"ruleId":"271","severity":1,"message":"369","line":15,"column":20,"nodeType":"273","messageId":"274","endLine":15,"endColumn":29},{"ruleId":"271","severity":1,"message":"288","line":20,"column":8,"nodeType":"273","messageId":"274","endLine":20,"endColumn":18},{"ruleId":"271","severity":1,"message":"289","line":21,"column":8,"nodeType":"273","messageId":"274","endLine":21,"endColumn":23},{"ruleId":"271","severity":1,"message":"290","line":22,"column":8,"nodeType":"273","messageId":"274","endLine":22,"endColumn":22},{"ruleId":"271","severity":1,"message":"291","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":18},{"ruleId":"271","severity":1,"message":"292","line":26,"column":10,"nodeType":"273","messageId":"274","endLine":26,"endColumn":26},{"ruleId":"271","severity":1,"message":"370","line":96,"column":10,"nodeType":"273","messageId":"274","endLine":96,"endColumn":16},{"ruleId":"271","severity":1,"message":"371","line":96,"column":18,"nodeType":"273","messageId":"274","endLine":96,"endColumn":27},{"ruleId":"271","severity":1,"message":"308","line":97,"column":10,"nodeType":"273","messageId":"274","endLine":97,"endColumn":19},{"ruleId":"271","severity":1,"message":"372","line":97,"column":21,"nodeType":"273","messageId":"274","endLine":97,"endColumn":33},{"ruleId":"271","severity":1,"message":"373","line":98,"column":10,"nodeType":"273","messageId":"274","endLine":98,"endColumn":19},{"ruleId":"271","severity":1,"message":"374","line":98,"column":21,"nodeType":"273","messageId":"274","endLine":98,"endColumn":33},{"ruleId":"271","severity":1,"message":"375","line":99,"column":10,"nodeType":"273","messageId":"274","endLine":99,"endColumn":17},{"ruleId":"271","severity":1,"message":"376","line":99,"column":19,"nodeType":"273","messageId":"274","endLine":99,"endColumn":29},{"ruleId":"271","severity":1,"message":"377","line":100,"column":10,"nodeType":"273","messageId":"274","endLine":100,"endColumn":24},{"ruleId":"271","severity":1,"message":"378","line":100,"column":26,"nodeType":"273","messageId":"274","endLine":100,"endColumn":43},{"ruleId":"271","severity":1,"message":"379","line":103,"column":10,"nodeType":"273","messageId":"274","endLine":103,"endColumn":19},{"ruleId":"271","severity":1,"message":"380","line":106,"column":18,"nodeType":"273","messageId":"274","endLine":106,"endColumn":31},{"ruleId":"271","severity":1,"message":"381","line":157,"column":19,"nodeType":"273","messageId":"274","endLine":157,"endColumn":28},{"ruleId":"382","severity":1,"message":"383","line":210,"column":30,"nodeType":"384","messageId":"385","endLine":210,"endColumn":32},{"ruleId":"271","severity":1,"message":"338","line":286,"column":11,"nodeType":"273","messageId":"274","endLine":286,"endColumn":19},{"ruleId":"386","severity":1,"message":"387","line":639,"column":28,"nodeType":"384","messageId":"388","endLine":639,"endColumn":29},{"ruleId":"271","severity":1,"message":"285","line":1,"column":17,"nodeType":"273","messageId":"274","endLine":1,"endColumn":25},{"ruleId":"271","severity":1,"message":"298","line":3,"column":10,"nodeType":"273","messageId":"274","endLine":3,"endColumn":15},{"ruleId":"271","severity":1,"message":"389","line":3,"column":17,"nodeType":"273","messageId":"274","endLine":3,"endColumn":23},{"ruleId":"271","severity":1,"message":"390","line":3,"column":25,"nodeType":"273","messageId":"274","endLine":3,"endColumn":33},{"ruleId":"271","severity":1,"message":"368","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":14},{"ruleId":"271","severity":1,"message":"391","line":40,"column":17,"nodeType":"273","messageId":"274","endLine":40,"endColumn":24},{"ruleId":"271","severity":1,"message":"392","line":77,"column":10,"nodeType":"273","messageId":"274","endLine":77,"endColumn":19},{"ruleId":"347","replacedBy":"393"},{"ruleId":"349","replacedBy":"394"},{"ruleId":"347","replacedBy":"395"},{"ruleId":"349","replacedBy":"396"},{"ruleId":"397","severity":1,"message":"398","line":5,"column":9,"nodeType":"399","messageId":"400","endLine":5,"endColumn":13},{"ruleId":"271","severity":1,"message":"272","line":3,"column":20,"nodeType":"273","messageId":"274","endLine":3,"endColumn":26},{"ruleId":"271","severity":1,"message":"275","line":4,"column":3,"nodeType":"273","messageId":"274","endLine":4,"endColumn":9},{"ruleId":"271","severity":1,"message":"276","line":5,"column":3,"nodeType":"273","messageId":"274","endLine":5,"endColumn":8},{"ruleId":"271","severity":1,"message":"277","line":6,"column":3,"nodeType":"273","messageId":"274","endLine":6,"endColumn":11},{"ruleId":"271","severity":1,"message":"278","line":7,"column":3,"nodeType":"273","messageId":"274","endLine":7,"endColumn":7},{"ruleId":"271","severity":1,"message":"279","line":9,"column":10,"nodeType":"273","messageId":"274","endLine":9,"endColumn":16},{"ruleId":"271","severity":1,"message":"280","line":9,"column":18,"nodeType":"273","messageId":"274","endLine":9,"endColumn":22},{"ruleId":"271","severity":1,"message":"281","line":9,"column":24,"nodeType":"273","messageId":"274","endLine":9,"endColumn":27},{"ruleId":"271","severity":1,"message":"282","line":11,"column":19,"nodeType":"273","messageId":"274","endLine":11,"endColumn":22},{"ruleId":"271","severity":1,"message":"283","line":12,"column":8,"nodeType":"273","messageId":"274","endLine":12,"endColumn":16},{"ruleId":"271","severity":1,"message":"284","line":14,"column":8,"nodeType":"273","messageId":"274","endLine":14,"endColumn":17},{"ruleId":"271","severity":1,"message":"285","line":15,"column":10,"nodeType":"273","messageId":"274","endLine":15,"endColumn":18},{"ruleId":"271","severity":1,"message":"286","line":19,"column":8,"nodeType":"273","messageId":"274","endLine":19,"endColumn":16},{"ruleId":"271","severity":1,"message":"287","line":20,"column":8,"nodeType":"273","messageId":"274","endLine":20,"endColumn":12},{"ruleId":"271","severity":1,"message":"288","line":23,"column":8,"nodeType":"273","messageId":"274","endLine":23,"endColumn":18},{"ruleId":"271","severity":1,"message":"289","line":24,"column":8,"nodeType":"273","messageId":"274","endLine":24,"endColumn":23},{"ruleId":"271","severity":1,"message":"290","line":25,"column":8,"nodeType":"273","messageId":"274","endLine":25,"endColumn":22},{"ruleId":"271","severity":1,"message":"291","line":26,"column":8,"nodeType":"273","messageId":"274","endLine":26,"endColumn":18},{"ruleId":"271","severity":1,"message":"292","line":29,"column":10,"nodeType":"273","messageId":"274","endLine":29,"endColumn":26},{"ruleId":"271","severity":1,"message":"293","line":30,"column":13,"nodeType":"273","messageId":"274","endLine":30,"endColumn":27},{"ruleId":"271","severity":1,"message":"294","line":32,"column":8,"nodeType":"273","messageId":"274","endLine":32,"endColumn":16},{"ruleId":"271","severity":1,"message":"401","line":33,"column":8,"nodeType":"273","messageId":"274","endLine":33,"endColumn":22},{"ruleId":"271","severity":1,"message":"295","line":40,"column":8,"nodeType":"273","messageId":"274","endLine":40,"endColumn":15},{"ruleId":"271","severity":1,"message":"296","line":41,"column":8,"nodeType":"273","messageId":"274","endLine":41,"endColumn":17},{"ruleId":"271","severity":1,"message":"297","line":42,"column":8,"nodeType":"273","messageId":"274","endLine":42,"endColumn":22},{"ruleId":"271","severity":1,"message":"299","line":69,"column":7,"nodeType":"273","messageId":"274","endLine":69,"endColumn":20},{"ruleId":"271","severity":1,"message":"300","line":79,"column":9,"nodeType":"273","messageId":"274","endLine":79,"endColumn":21},{"ruleId":"271","severity":1,"message":"402","line":109,"column":9,"nodeType":"273","messageId":"274","endLine":109,"endColumn":16},{"ruleId":"271","severity":1,"message":"301","line":136,"column":9,"nodeType":"273","messageId":"274","endLine":136,"endColumn":16},{"ruleId":"271","severity":1,"message":"302","line":269,"column":10,"nodeType":"273","messageId":"274","endLine":269,"endColumn":14},{"ruleId":"271","severity":1,"message":"403","line":269,"column":16,"nodeType":"273","messageId":"274","endLine":269,"endColumn":23},{"ruleId":"271","severity":1,"message":"303","line":274,"column":10,"nodeType":"273","messageId":"274","endLine":274,"endColumn":15},{"ruleId":"271","severity":1,"message":"304","line":274,"column":17,"nodeType":"273","messageId":"274","endLine":274,"endColumn":25},{"ruleId":"271","severity":1,"message":"305","line":275,"column":10,"nodeType":"273","messageId":"274","endLine":275,"endColumn":14},{"ruleId":"271","severity":1,"message":"404","line":275,"column":16,"nodeType":"273","messageId":"274","endLine":275,"endColumn":23},{"ruleId":"271","severity":1,"message":"405","line":278,"column":10,"nodeType":"273","messageId":"274","endLine":278,"endColumn":15},{"ruleId":"271","severity":1,"message":"406","line":278,"column":17,"nodeType":"273","messageId":"274","endLine":278,"endColumn":25},{"ruleId":"271","severity":1,"message":"407","line":279,"column":10,"nodeType":"273","messageId":"274","endLine":279,"endColumn":20},{"ruleId":"271","severity":1,"message":"408","line":279,"column":22,"nodeType":"273","messageId":"274","endLine":279,"endColumn":35},{"ruleId":"271","severity":1,"message":"306","line":281,"column":10,"nodeType":"273","messageId":"274","endLine":281,"endColumn":23},{"ruleId":"271","severity":1,"message":"307","line":281,"column":25,"nodeType":"273","messageId":"274","endLine":281,"endColumn":41},{"ruleId":"271","severity":1,"message":"308","line":282,"column":10,"nodeType":"273","messageId":"274","endLine":282,"endColumn":19},{"ruleId":"271","severity":1,"message":"372","line":282,"column":21,"nodeType":"273","messageId":"274","endLine":282,"endColumn":33},{"ruleId":"271","severity":1,"message":"409","line":283,"column":10,"nodeType":"273","messageId":"274","endLine":283,"endColumn":25},{"ruleId":"271","severity":1,"message":"410","line":283,"column":27,"nodeType":"273","messageId":"274","endLine":283,"endColumn":45},{"ruleId":"271","severity":1,"message":"309","line":286,"column":9,"nodeType":"273","messageId":"274","endLine":286,"endColumn":16},{"ruleId":"271","severity":1,"message":"411","line":291,"column":10,"nodeType":"273","messageId":"274","endLine":291,"endColumn":30},{"ruleId":"271","severity":1,"message":"310","line":299,"column":10,"nodeType":"273","messageId":"274","endLine":299,"endColumn":18},{"ruleId":"271","severity":1,"message":"311","line":323,"column":10,"nodeType":"273","messageId":"274","endLine":323,"endColumn":19},{"ruleId":"271","severity":1,"message":"312","line":323,"column":21,"nodeType":"273","messageId":"274","endLine":323,"endColumn":33},{"ruleId":"271","severity":1,"message":"313","line":324,"column":10,"nodeType":"273","messageId":"274","endLine":324,"endColumn":21},{"ruleId":"271","severity":1,"message":"314","line":324,"column":23,"nodeType":"273","messageId":"274","endLine":324,"endColumn":37},{"ruleId":"271","severity":1,"message":"315","line":325,"column":10,"nodeType":"273","messageId":"274","endLine":325,"endColumn":18},{"ruleId":"271","severity":1,"message":"316","line":325,"column":20,"nodeType":"273","messageId":"274","endLine":325,"endColumn":31},{"ruleId":"271","severity":1,"message":"317","line":326,"column":10,"nodeType":"273","messageId":"274","endLine":326,"endColumn":28},{"ruleId":"271","severity":1,"message":"318","line":327,"column":10,"nodeType":"273","messageId":"274","endLine":327,"endColumn":23},{"ruleId":"271","severity":1,"message":"319","line":327,"column":25,"nodeType":"273","messageId":"274","endLine":327,"endColumn":41},{"ruleId":"271","severity":1,"message":"322","line":331,"column":10,"nodeType":"273","messageId":"274","endLine":331,"endColumn":15},{"ruleId":"271","severity":1,"message":"323","line":332,"column":10,"nodeType":"273","messageId":"274","endLine":332,"endColumn":19},{"ruleId":"271","severity":1,"message":"324","line":335,"column":9,"nodeType":"273","messageId":"274","endLine":335,"endColumn":20},{"ruleId":"271","severity":1,"message":"334","line":349,"column":9,"nodeType":"273","messageId":"274","endLine":349,"endColumn":15},{"ruleId":"271","severity":1,"message":"334","line":369,"column":9,"nodeType":"273","messageId":"274","endLine":369,"endColumn":15},{"ruleId":"271","severity":1,"message":"412","line":445,"column":13,"nodeType":"273","messageId":"274","endLine":445,"endColumn":39},{"ruleId":"271","severity":1,"message":"326","line":557,"column":13,"nodeType":"273","messageId":"274","endLine":557,"endColumn":30},{"ruleId":"271","severity":1,"message":"327","line":611,"column":13,"nodeType":"273","messageId":"274","endLine":611,"endColumn":36},{"ruleId":"271","severity":1,"message":"328","line":615,"column":13,"nodeType":"273","messageId":"274","endLine":615,"endColumn":35},{"ruleId":"271","severity":1,"message":"329","line":620,"column":13,"nodeType":"273","messageId":"274","endLine":620,"endColumn":28},{"ruleId":"271","severity":1,"message":"330","line":629,"column":13,"nodeType":"273","messageId":"274","endLine":629,"endColumn":24},{"ruleId":"271","severity":1,"message":"331","line":634,"column":13,"nodeType":"273","messageId":"274","endLine":634,"endColumn":28},{"ruleId":"271","severity":1,"message":"338","line":703,"column":13,"nodeType":"273","messageId":"274","endLine":703,"endColumn":21},{"ruleId":"271","severity":1,"message":"334","line":707,"column":11,"nodeType":"273","messageId":"274","endLine":707,"endColumn":17},{"ruleId":"344","severity":1,"message":"345","line":1096,"column":3,"nodeType":"346","endLine":1098,"endColumn":5},{"ruleId":"344","severity":1,"message":"345","line":1220,"column":3,"nodeType":"346","endLine":1222,"endColumn":5},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'AppBar' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'set' is defined but never used.","'OtpInput' is defined but never used.","'RespModal' is defined but never used.","'useState' is defined but never used.","'MenuItem' is defined but never used.","'Grid' is defined but never used.","'BetterUser' is defined but never used.","'ApplicationForm' is defined but never used.","'StudentRecords' is defined but never used.","'usePromise' is defined but never used.","'getDefaultLocale' is defined but never used.","'ReactBootStrap' is defined but never used.","'ReactDOM' is defined but never used.","'classes' is defined but never used.","'FormModal' is defined but never used.","'ModalComponent' is defined but never used.","'Table' is defined but never used.","'backdropStyle' is assigned a value but never used.","'selectStyles' is assigned a value but never used.","'courses' is assigned a value but never used.","'auth' is assigned a value but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'open' is assigned a value but never used.","'fetchFinished' is assigned a value but never used.","'setFetchFinished' is assigned a value but never used.","'showModal' is assigned a value but never used.","'classes' is assigned a value but never used.","'district' is assigned a value but never used.","'challanId' is assigned a value but never used.","'setChallanId' is assigned a value but never used.","'challanDate' is assigned a value but never used.","'setChallanDate' is assigned a value but never used.","'bankName' is assigned a value but never used.","'setBankName' is assigned a value but never used.","'declarationChecked' is assigned a value but never used.","'paymentStatus' is assigned a value but never used.","'setPaymentStatus' is assigned a value but never used.","'values' is assigned a value but never used.","'setValues' is assigned a value but never used.","'image' is assigned a value but never used.","'signature' is assigned a value but never used.","'saveSuccess' is assigned a value but never used.","'handleFieldChange' is assigned a value but never used.","'handleNationality' is assigned a value but never used.","'handlePercentageOfMarks' is assigned a value but never used.","'handleEligibilityMarks' is assigned a value but never used.","'handleFeeAmount' is assigned a value but never used.","'handleImage' is assigned a value but never used.","'handleSignature' is assigned a value but never used.","'readCookie' is assigned a value but never used.","'ModalPopUpHandler' is assigned a value but never used.","'result' is assigned a value but never used.","'ModalWithGrid' is assigned a value but never used.","'renderStudents' is assigned a value but never used.","'onCloseModal' is assigned a value but never used.","'response' is assigned a value but never used.","'toggle' is assigned a value but never used.","'userData' is assigned a value but never used.","'userFetched' is assigned a value but never used.","'showModalHandler' is assigned a value but never used.","'hideModalHandler' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-native-reassign",["413"],"no-negated-in-lhs",["414"],"'Popper' is defined but never used.",["413"],["414"],["413"],["414"],["413"],["414"],"'Avatar' is defined but never used.","'GroupIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'useHistory' is defined but never used.","'DatePicker' is defined but never used.","'routeChange' is assigned a value but never used.",["413"],["414"],"'InputBase' is defined but never used.","'Button' is defined but never used.","'useEffect' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'setShowModal' is assigned a value but never used.","'modalOpen' is assigned a value but never used.","'setModalOpen' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'displayOtpForm' is assigned a value but never used.","'setDisplayOtpForm' is assigned a value but never used.","'studentId' is assigned a value but never used.","'handleSendOTP' is defined but never used.","'verifyOTP' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'Column' is defined but never used.","'DataCell' is defined but never used.","'student' is assigned a value but never used.","'handlePay' is assigned a value but never used.",["413"],["414"],["413"],["414"],"no-this-before-super","'this' is not allowed before 'super()'.","ThisExpression","noBeforeSuper","'BootstrapTable' is defined but never used.","'columns' is assigned a value but never used.","'setAuth' is assigned a value but never used.","'setOpen' is assigned a value but never used.","'modal' is assigned a value but never used.","'setModal' is assigned a value but never used.","'dataExists' is assigned a value but never used.","'setDataExists' is assigned a value but never used.","'modalShowToggle' is assigned a value but never used.","'setModalShowToggle' is assigned a value but never used.","'studyCenterOptedCode' is assigned a value but never used.","'handleStudyCenterOptedCode' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]