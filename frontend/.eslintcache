[{"/home/discovery/Documents/onlineapp/svuapp/frontend/src/App.js":"1","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Home.js":"2","/home/discovery/Documents/onlineapp/svuapp/frontend/src/index.js":"3","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Table.js":"4","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Login.js":"5","/home/discovery/Documents/onlineapp/svuapp/frontend/src/reportWebVitals.js":"6","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/history.js":"7","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/checkbox/index.js":"8","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/PhoneLogin.js":"9","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Root.js":"10","/home/discovery/Documents/onlineapp/svuapp/frontend/src/libs/contextLib.js":"11","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/VerifyModal.js":"12","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/BetterUser.js":"13","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/User.js":"14","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/HomeComponent.js":"15"},{"size":1156,"mtime":1610456655210,"results":"16","hashOfConfig":"17"},{"size":21563,"mtime":1610456742230,"results":"18","hashOfConfig":"17"},{"size":500,"mtime":1609171927363,"results":"19","hashOfConfig":"17"},{"size":3752,"mtime":1609171927363,"results":"20","hashOfConfig":"17"},{"size":8633,"mtime":1610456683434,"results":"21","hashOfConfig":"17"},{"size":362,"mtime":1609171927363,"results":"22","hashOfConfig":"17"},{"size":88,"mtime":1609647301347,"results":"23","hashOfConfig":"17"},{"size":1511,"mtime":1609766834899,"results":"24","hashOfConfig":"17"},{"size":11441,"mtime":1610456720394,"results":"25","hashOfConfig":"17"},{"size":607,"mtime":1610456701298,"results":"26","hashOfConfig":"17"},{"size":168,"mtime":1610084931379,"results":"27","hashOfConfig":"17"},{"size":7418,"mtime":1610107272535,"results":"28","hashOfConfig":"17"},{"size":655,"mtime":1610373311175,"results":"29","hashOfConfig":"17"},{"size":2260,"mtime":1610456896711,"results":"30","hashOfConfig":"17"},{"size":4475,"mtime":1610457156944,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"lldrkd",{"filePath":"36","messages":"37","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/discovery/Documents/onlineapp/svuapp/frontend/src/App.js",["74","75","76","77","78","79","80","81"],"import React, { Component } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from '@testing-library/react';\nimport { Router, Route, Link } from 'react-router-dom';\nimport history from './components/history';\nimport Table from \"./components/Table\"\nimport Home from \"./components/Home\"\nimport Login from \"./components/Login\"\nimport PhoneLogin from \"./components/PhoneLogin\"\nimport Root from \"./components/Root\"\nimport {withRouter} from 'react-router';\nimport { AppContext } from \"./libs/contextLib\";\nimport HomeComponent from './components/HomeComponent'\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: false\n    }\n  }\n  render() {\n    \n    return (\n        <Router history={history}>\n          <Route name=\"Root\" path=\"/\" exact component={Root} />\n          <Route name=\"Login\" path=\"/login\" exact component={Login} />\n          <Route name=\"PhoneLogin\" path=\"/phonelogin\" exact component={PhoneLogin} />\n          <Route name=\"HomeComponent\" path=\"/home\" exact component={HomeComponent} />\n        </Router>\n      \n    );\n  }\n}\n\nexport default App;\n",["82","83"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Home.js",["84","85","86","87","88","89","90","91","92","93"],"import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Checkbox from 'react-simple-checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { useHistory } from \"react-router-dom\";\nimport DatePicker from 'react-datepicker';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        SVUDDE\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst routeChange = () => { \n  // let path = `/home`; \n  //eslint-disable-next-line no-restricted-globals\n  history.push(\"/home\");\n}\n\nclass Home extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    \n\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n  }\n  state = {\n    courseApplied: \"\",\n    studyCenterOptedCode: \"\",\n    name: \"\",\n    fatherName: \"\",\n    aadharNo: \"\",\n    doorNo: \"\",\n    street: \"\",\n    village: \"\",\n    mandal: \"\",\n    district: \"\",\n    pincode: \"\",\n    email: \"\",\n    gender: \"\",\n    medium: \"\",\n    secondLanguageOpted: \"\",\n    dob: new Date(\"1978-04-02T21:11:54\"),\n    maritalStatus: \"\",\n    nationality: \"\",\n    religion: \"\",\n    caste: \"\",\n    residential: \"\",\n    phCategory: \"\",\n    qualifyingExamination: \"\",\n    university: \"\",\n    yearAndMonthPasssing: new Date(\"1978-04-02T21:11:54\"),\n    groupSubject: \"\",\n    maxMarks: \"\",\n    marksObtained: \"\",\n    percentageOfMarks: \"\",\n    feeAmount: \"\",\n    challanId: \"\",\n    challanDate: new Date(\"2021-01-01T21:11:54\"),\n    bankName: \"\",\n    declarationChecked: \"\"\n  }\n\n  logoutHandler =(e) => {\n    this.props.history.push('/login')\n  }\n\n  handleCouseApplied = (courseApplied) => {\n    this.setState({\n      courseApplied: courseApplied\n    })\n  }\n\n  handleStudyCenterOptedCode = (codeOpted) => {\n    this.setState({\n      studyCenterOptedCode: codeOpted\n    })\n  }\n\n  handleNameChange = (name) => {\n    this.setState({\n      name: name\n    })\n  }\n\n  handleFatherName = (fatherName) => {\n    this.setState({\n      fatherName: fatherName\n    })\n  }\n\n  handleAadharNo = (aadharNo) => {\n    this.setState({\n      aadharNo: aadharNo\n    })\n  }\n\n  handleDoorNo = (doorNo) => {\n    this.setState({\n      doorNo: doorNo\n    })\n  }\n\n  handleStreet = (street) => {\n    this.setState({\n      street: street\n    })\n  }\n\n  handleVillage = (village) => {\n    this.setState({\n      village: village\n    })\n  }\n\n  handleMandal = (mandal) => {\n    this.setState({\n      mandal: mandal\n    })\n  }\n\n  handleDistrict = (district) => {\n    this.setState({\n      district: district\n    })\n  }\n\n  handlePincode = (pincode) => {\n    this.setState({\n      pincode: pincode\n    })\n  }\n\n  handleEmail = (email) => {\n    this.setState({\n      email: email\n    })\n  }\n\n  handleGenderChange = (gender) => {\n    this.setState({\n      gender: gender\n    })\n  }\n\n  handleMedium = (medium) => {\n    this.setState({\n      medium: medium\n    })\n  }\n\n  handleSecondLanguageOpted = (secondLanguageOpted) => {\n    this.setState({\n      secondLanguageOpted: secondLanguageOpted\n    })\n  }\n\n  handleDOB = (dob) => {\n    this.setState({\n      dob: dob\n    })\n  }\n\n  handleMaritalStatus = (maritalStatus) => {\n    this.setState({\n      maritalStatus: maritalStatus\n    })\n  }\n\n  handleNationality = (nationality) => {\n    this.setState({\n      nationality: nationality\n    })\n  }\n\n  handleReligion = (religion) => {\n    this.setState({\n      religion: religion\n    })\n  }\n\n  handleCaste = (caste) => {\n    this.setState({\n      caste: caste\n    })\n  }\n\n  handleResidential = (residential) => {\n    this.setState({\n      residential: residential\n    })\n  }\n\n  handlePhCategory = (phCategory) => {\n    this.setState({\n      phCategory: phCategory\n    })\n  }\n\n  handleQualifyingExam = (qualifyingExamination) => {\n    this.setState({\n      qualifyingExamination: qualifyingExamination\n    })\n  }\n\n  handleUniversity = (university) => {\n    this.setState({\n      university: university\n    })\n  }\n\n  handleYearAndMonth= (yearAndMonthPassing) => {\n    this.setState({\n      yearAndMonthPassing: yearAndMonthPassing\n    })\n  }\n\n  handleGroupSubject = (groupSubject) => {\n    this.setState({\n      groupSubject: groupSubject\n    })\n  }\n\n  handleMaxMarks = (maxMarks) => {\n    this.setState({\n      maxMarks: maxMarks\n    })\n  }\n\n  handleMarksObtained = (marksObtained) => {\n    this.setState({\n      marksObtained: marksObtained\n    })\n  }\n\n  handlePercentageOfMarks = (percentageOfMarks) => {\n    this.setState({\n      percentageOfMarks: percentageOfMarks\n    })\n  }\n\n  handleFeeAmount = (feeAmount) => {\n    this.setState({\n      feeAmount: feeAmount\n    })\n  }\n\n  handleChallanId = (chllanId) => {\n    this.setState({\n      chllanId: chllanId\n    })\n  }\n\n  handleChallanDate = (challanDate) => {\n    this.setState({\n      challanDate: challanDate\n    })\n  }\n\n  handleBankName = (bankName) => {\n    this.setState({\n      bankName: bankName\n    })\n  }\n\n  handleDeclarationChecked = (declarationChecked) => {\n    this.setState({\n      declarationChecked: declarationChecked\n    })\n  }\n\n\n  saveApplication = (toInput) => {\n    const response = fetch(\"/svudde/saveForm\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, *cors, same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrerPolicy: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(toInput) // body data type must match \"Content-Type\" header\n    }).then(response => {\n      if(!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      } else {\n        console.log(\"SUCCESS\")\n        // console.log(\"Status: OK in Home -> Response: \" + JSON.stringify(response.json()));\n        // let responseText = document.createElement(response.json());\n        // document.body.appendChild(responseText);\n      }\n    })\n    .catch(e => {\n      console.log('There has been a problem with the fetch operation: ' + e.message)\n    })\n  }\n\n  handleFormSubmit = (variables) => {\n    variables.preventDefault();\n    console.log(\"Declaration checked\" + this.state.declarationChecked)\n    const toInput = this.state.gender;\n    this.saveApplication(toInput);\n  };\n\n  // if (firstLoad) {\n  //   // sampleFunc();\n  //   setLoad(false);\n  // }\n\n  render() {\n    const { classes } = this.props;\n  return (\n    \n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <BrowserRouter>\n                <div>\n                    {/* <header>\n                        <Link to='/contact'>Contact</Link>\n                    </header>\n                    <div>\n                        <Route path='/contact' Component={Contact}></Route>\n                    </div> */}\n                    {/* <a href=\"#\" onClick={e=>this.logoutHandler(e)}>Logout</a> */}\n                </div>\n    </BrowserRouter>\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Admission Application Form\n        </Typography>\n         <form className={classes.form} noValidate>\n        <p>Course and Subject Applied</p>\n        <select defaultValue={\"\"} \n            onChange={this.handleCouseApplied} \n        >\n          <option value=\"Couse1\">Course1</option>\n          <option value=\"Course2\">Course2</option>\n          <option value=\"Course3\">Course3</option>\n        </select>\n\n        <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"studyCenterId\"\n            label=\"Study Center opted with Code No.\"\n            name=\"name\"\n            defaultValue=\"001\"\n            onChange={this.handleStudyCenterOptedCode}\n            autoFocus\n          />\n        <p>(Only required for applicants from study centers)</p>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"name\"\n            label=\"Name of the Applicant (as per lower degree )\"\n            name=\"name\"\n            autoComplete=\"name\"\n            onChange={this.handleNameChange}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"fatherName\"\n            label=\"Father's Name\"\n            name=\"fatherName\"\n            autoComplete=\"fatherName\"\n            onChange={this.handleFatherName}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"aadharNo\"\n            label=\"AADHAR No.\"\n            name=\"aadharNo\"\n            autoComplete=\"\"\n            onChange={this.handleAadharNo}\n            autoFocus\n          />\n          <p>-- Address for Communication --</p>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"doorNo\"\n            label=\"Door No.\"\n            name=\"Door No.\"\n            autoComplete=\"doorNo\"\n            onChange={this.handleDoorNo}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"street\"\n            label=\"Street\"\n            name=\"Street\"\n            autoComplete=\"street\"\n            onChange={this.handleStreet}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"village\"\n            label=\"Village/Post\"\n            name=\"village\"\n            autoComplete=\"village\"\n            onChange={this.handleVillage}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"mandal\"\n            label=\"Mandal/Town\"\n            name=\"mandal\"\n            autoComplete=\"mandal\"\n            onChange={this.handleMandal}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"district\"\n            label=\"District\"\n            name=\"district\"\n            autoComplete=\"mandal\"\n            onChange={this.handleDistrict}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"pincode\"\n            label=\"Pincode\"\n            name=\"pincode\"\n            autoComplete=\"pincode\"\n            onChange={this.handlePincode}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            onChange={this.handleEmail}\n            autoFocus\n          />\n          <p>Gender</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleGenderChange} \n          >\n            <option value=\"M\">M</option>\n            <option value=\"F\">F</option>\n          </select> \n\n          <p>Medium</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleMedium} \n          >\n            <option value=\"English\">English</option>\n            <option value=\"Telugu\">Telugu</option>\n          </select>       \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"secondLanguage\"\n            label=\"(a) Second Language Opted under Part-I B:\"\n            name=\"secondLanguage\"\n            autoComplete=\"secondLanguage\"\n            onChange={this.handleSecondLanguageOpted}\n            autoFocus\n          />\n          <p>(B.Sc- English Medium only)</p>\n          <p>(Only for B.A/B.Com/B.Sc)</p>\n          <br></br>\n          \n          <Grid item xs={12}>\n                        <TextField\n                            id=\"date\"\n                            label=\"Date of birth\"\n                            name=\"Date of Birth\"\n                            type=\"date\"\n                            defaultValue=\"1978-04-02\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleDOB}\n                        />\n                    </Grid>\n          <br></br>\n          <p>Marital Status</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleMaritalStatus} \n          >\n            <option value=\"Single\">Unmarried</option>\n            <option value=\"Married\">Married</option>\n          </select>  \n          <br></br>\n          <p>Nationality</p>\n          <input className=\"e-input\" type=\"text\" placeholder=\"Indian\" value=\"Indian\" readOnly= {true}/>\n          <br></br>\n          <p>Religion</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleReligion} \n          >\n            <option value=\"Hindu\">Hindu</option>\n            <option value=\"Muslim\">Muslim</option>\n            <option value=\"Christian\">Christian</option>\n            <option value=\"Sikh\">Sikh</option>\n            <option value=\"Others\">Others</option>\n          </select>\n          <br></br>\n          <p>Caste</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleCaste} \n          >\n            <option value=\"OC\">OC</option>\n            <option value=\"BC\">BC</option>\n            <option value=\"SC\">SC</option>\n            <option value=\"ST\">ST</option>\n            <option value=\"Others\">Others</option>\n          </select>\n\n          <br></br>\n          <p>Residential Status</p>\n          <select defaultValue={\"\"} \n              onChange={this.handleResidential} \n          >\n            <option value=\"Urban\">Urban</option>\n            <option value=\"Rural\">Rural</option>\n            <option value=\"Tribal\">Tribal</option>\n          </select>\n          \n          <p>Whether belongs to PH Category?</p>\n          <select defaultValue={\"No\"} \n              onChange={this.handlePhCategory} \n          >\n            <option value=\"No\">No</option>\n            <option value=\"Yes\">Yes</option>\n          </select>\n          <br></br>\n          <p>-- Particulars of the Qualifying Examinations passed --</p>\n          \n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"qualifyingExamination\"\n            label=\"Qualifying Examination\"\n            name=\"qualifyingExamination\"\n            autoComplete=\"qualifyingExamination\"\n            onChange={this.handleQualifyingExam}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"university\"\n            label=\"University\"\n            name=\"university\"\n            autoComplete=\"university\"\n            onChange={this.handleUniversity}\n            autoFocus\n          />\n\n          <Grid item xs={12}>\n                        <TextField\n                            id=\"yearAndMonth\"\n                            label=\"Year and Month\"\n                            name=\"yearAndMonth\"\n                            type=\"date\"\n                            defaultValue=\"1998-04-02\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleYearAndMonth}\n                        />\n                    </Grid>\n          <br></br>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"groupSubject\"\n            label=\"Group or Subject\"\n            name=\"groupSubject\"\n            autoComplete=\"groupSubject\"\n            onChange={this.handleGroupSubject}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"maxMarks\"\n            label=\"Maximum Marks\"\n            name=\"maxMarks\"\n            autoComplete=\"maxMarks\"\n            onChange={this.handleMaxMarks}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"marksObtained\"\n            label=\"Marks Obtained\"\n            name=\"marksObtained\"\n            autoComplete=\"marksObtained\"\n            onChange={this.handleMarksObtained}\n            autoFocus\n          />\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"percentageOfMarks\"\n            label=\"Percentage of Marks\"\n            name=\"percentageOfMarks\"\n            autoComplete=\"percentageOfMarks\"\n            onChange={this.handlePercentageOfMarks}\n            autoFocus\n          />\n\n          <p>-- Fee Particulars --</p>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"feeAmount\"\n            label=\"Fee Amount\"\n            name=\"feeAmount\"\n            autoComplete=\"feeAmount\"\n            onChange={this.handleFeeAmount}\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"challanId\"\n            label=\"Paid Challan Id\"\n            name=\"challanId\"\n            autoComplete=\"challanId\"\n            onChange={this.handleChallanId}\n            autoFocus\n          />\n          <Grid item xs={12}>\n                        <p>Challan Payment Date</p>\n                        <TextField\n                            id=\"challanPaymentDate\"\n                            name=\"challanPaymentDate\"\n                            type=\"date\"\n                            defaultValue=\"2021-01-01\"\n                            className={classes.textField}\n                            InputLabelProps={{\n                                shrink: true\n                            }}\n                            onChange={this.handleChallanDate}\n                        />\n                    </Grid>\n\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"bankName\"\n            label=\"Bank Name\"\n            name=\"bankName\"\n            autoComplete=\"bankName\"\n            onChange={this.handleBankName}\n            autoFocus\n          />\n\n           <Checkbox\n            name=\"declaration\"\n            label=\"declaration\"\n            checked={this.state.declarationChecked}\n            onChange={this.handleDeclarationChecked}\n          /> \n          <p>I hereby declare that the particulars given above are correct. In case if they are found to be incorrect\n            at a later date, I submit myself for any action including removal from the rolls and such other disciplinary\n            action under the ACT, the Statues and Ordinances rule of the University, I also agree to abide by the\n            conditions, rules and regulations stipulated by the Directorate of distance Education and the Laws of the\n            university applicable from time to time.</p>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            onClick={this.handleFormSubmit}\n          >\n            Save\n          </Button>\n        </form> \n\n        \n      </div>\n      {/* <div className=\"responseData\">\n        {this.setSaveResponse}\n      \n      </div> */}\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n                          }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Home);\n",["94","95"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/index.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Table.js",[],["96","97"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Login.js",["98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],"import React, { useState } from \"react\";\nimport Popup from 'reactjs-popup';\n\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Redirect } from \"react-router-dom\";\nimport history from './history';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput2 from 'react-phone-number-input';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PhoneInput from 'react-phone-number-input/input';\nimport PropTypes from 'prop-types';\nimport PasswordMask from 'react-password-mask';\nimport OtpInput from 'react-otp-input';\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport HomeComponent from './HomeComponent';\n\n\n// import Prompt from './Prompt';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        SVUDDE\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst routeChange = (userId) => { \n  // let path = `/home`;\n  console.log(\"userId in routechange \" + userId);\n  window.user = true;\n  window.userId = userId;\n  history.push(\"/home\");\n}\n\nclass Login extends React.Component {\n\n  \n  isValidNumber = false;\n\n  constructor(props) {\n    super(props);\n    // this.state = { phone: \"\", seen: false };\n    \n    this.state = {\n      input: {}, \n      errors: {},\n      phone: \"\",\n      seen: false,\n      otpEntered: \"\",\n      otpSentSessionId: \"\",\n      studentId: 0,\n      studentExists: false,\n      username: \"\",\n      password: \"\",\n      mobilevalidate: false,\n      otp: \"\",\n      loadDialog: false,\n      phoneTrimmed: \"\",\n      isUser: true\n     };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n        phone: \"required|numeric|digits_between:10,12\",\n    });\n    this.onformsubmit = (fields) => {\n      // Do you ajax calls here.\n    }\n\n    \n\n  }\n\n  \n\n  toggle = () => {\n    //this.modifyPhone();\n    let phoneEntered = this.state.phone;\n    let phoneArr = phoneEntered.split(\"+91\");\n  \n    let phoneTrimmed = phoneArr[1];\n    console.log(\"phone after modifying -> \" + phoneTrimmed)\n    this.mobileValidate(phoneTrimmed)\n  }\n\n  updateState = () => {\n    \n    // let phone = Object.assign({}, this.state.phone);\n    // phone = phoneTrimmed;\n    // this.setState({phone});\n    // console.log(\"phone updated to \" + this.state.phone)\n  }\n\n   \n\n  \n\n  handlePhone = (phone) => {\n    this.setState({phone: phone});\n  }\n\n  handleChange(event) {\n    let input = this.state.input;\n    input[event.target.name] = event.target.value;\n    this.setState({     \n      input\n    });\n  }\n\n  modifyPhone = () => {\n    console.log(\"modifying Phone \" + this.state.phone);\n    let phoneEntered = this.state.phone;\n    let phoneArr = phoneEntered.split(\"+91\");\n  \n    let phoneTrimmed = phoneArr[1];\n    console.log(\"phone trimemd to \" + phoneTrimmed);\n    this.setState({ phoneTrimmed: phoneTrimmed});\n    console.log(\"phone in state to \" + this.state.phoneTrimmed);\n  }\n\n  // handleOTPEntered = (otpEntered) => {\n  //   console.log(\"otp entered by student \" + (this.state.otpEntered))\n  //   this.setState({otpEntered: otpEntered})\n  // }\n\n  loginUser(input) {\n    //fetch user authentication and redirect based on result\n    console.log(\"Authentication success \" + input);\n    \n    routeChange();\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(this.validate()){\n        console.log(this.state);\n        let input = {};\n        \n\n        // fetch to Authenticate and redirect\n        routeChange(this.state.input.username);\n\n        input[\"username\"] = \"\";\n        input[\"password\"] = \"\";\n        input[\"confirm_password\"] = \"\";\n        this.setState({input:input});\n    }\n\n  }\n\n  validate() {\n    let input = this.state.input;\n    let errors = {};\n    let isValid = true;\n    if (!input[\"username\"]) {\n        isValid = false;\n        errors[\"username\"] = \"Please enter your username.\";\n    }\n    \n    if (typeof input[\"username\"] !== \"undefined\") {\n        const re = /^\\S*$/;\n        if(input[\"username\"].length < 6 || !re.test(input[\"username\"])) {\n          isValid = false;\n          errors[\"username\"] = \"Please enter valid username.\";\n        }\n    }\n    \n    if (!input[\"password\"]) {\n      isValid = false;\n      errors[\"password\"] = \"Please enter your password.\";\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return isValid;\n  }\n\n  \n\n  // handleUserId = (event) => {    \n  //   this.setState({userId: event.target.value});  \n  // }\n\n  // handlePassword = (event) => {    \n  //   this.setState({password: event.target.value});  \n  // }\n\n  getPhone = () => {\n    return this.state.phone\n  }\n\n  mobileValidate(text) {\n    console.log(\"In mobileValidate \" + text)\n    const reg = /^[0]?[789]\\d{9}$/;\n    if (reg.test(text) === false) {\n      this.setState({\n        mobilevalidate: false\n      });\n    } else {\n      console.log(\"valid mobile number, setting true\");\n      this.isValidNumber = true;\n    }\n    //this.setState()\n  }\n\n  handleStudentSubmit = (e) => {\n    this.toggle();\n    console.log(\"valid mobile number \" + this.isValidNumber);\n    if(!this.isValidNumber) {\n      alert(\"Enter a vaild mobile number\");\n    } else {\n      return (<OtpInput\n        onChange={this.handleOTPInput}\n        numInputs={6}\n        separator={<span>-</span>}\n      />)\n    }\n  \n  }\n\n  renderOtpInput = () => {\n    return (<OtpInput\n        onChange={this.handleOTPInput}\n        numInputs={6}\n        separator={<span>-</span>}\n      />)\n  }\n  \n  render() {\n  const { classes } = this.props;\n\n  return (  \n    <Container className={useStyles.paper} component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Study Center Sign in\n        </Typography>\n\n        {this.props.isStudent && <h1>Study Center Login</h1>}\n\n        <form onSubmit={this.handleSubmit}>\n          <div class=\"form-group\">\n            <label for=\"username\">Username </label>\n            <input \n              type=\"text\" \n              name=\"username\" \n              value={this.state.input.username}\n              onChange={this.handleChange}\n              class=\"form-control\" \n              placeholder=\"Enter username\" \n              id=\"username\" />\n          <div className=\"text-danger\">{this.state.errors.username}</div>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password </label>\n            <input \n              type=\"password\" \n              name=\"password\" \n              value={this.state.input.password}\n              onChange={this.handleChange}\n              class=\"form-control\" \n              placeholder=\"Enter password\" \n              id=\"password\" />\n          <div className=\"text-danger\">{this.state.errors.username}</div>\n        </div>\n        <div className=\"text-danger\">{this.state.errors.password}</div>\n        <input type=\"submit\" value=\"Submit\" class=\"btn btn-success\" />\n      </form>   \n  </div>\n  <Box mt={8}>\n    <Copyright />\n  </Box>\n</Container>\n);\n}\n\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\n// export default Login;\n\nexport default withStyles(useStyles, { withTheme: true })(Login)\n  \n\n","/home/discovery/Documents/onlineapp/svuapp/frontend/src/reportWebVitals.js",[],["114","115"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/history.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/checkbox/index.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/PhoneLogin.js",["116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131"],"import React, { useState } from \"react\";\nimport Popup from 'reactjs-popup';\nimport VerifyModal from \"./VerifyModal\";\n\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Redirect } from \"react-router-dom\";\nimport history from './history';\nimport 'react-phone-number-input/style.css'\nimport PhoneInput2 from 'react-phone-number-input';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PhoneInput from 'react-phone-number-input/input';\nimport PropTypes from 'prop-types';\nimport PasswordMask from 'react-password-mask';\nimport OtpInput from 'react-otp-input';\nimport ReactFormInputValidation from \"react-form-input-validation\";\nimport ReactModalLogin from 'react-modal-login';\nimport HomeComponent from './HomeComponent'\n\n\n// import Prompt from './Prompt';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Copyright = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" to=\"https://material-ui.com/\">\n        SVUDDE\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst routeChange = () => { \n  // let path = `/home`; \n  history.push(\"/home\");\n}\n\nclass PhoneLogin extends React.Component {\n\n  isValidNumber = false;\n\n  constructor(props) {\n    super(props);\n    // this.state = { phone: \"\", seen: false };\n    // this.state = {\n    //   input: {}, \n    //   errors: {\n    //     phone: \"\"\n    //   },\n    //   phone: \"\",\n    //   seen: false,\n    //   otpEntered: \"\",\n    //   otpSentSessionId: \"\",\n    //   studentId: 0,\n    //   studentExists: false,\n    //   username: \"\",\n    //   password: \"\",\n    //   mobilevalidate: false,\n    //   otp: \"\",\n    //   loadDialog: false,\n    //   phoneTrimmed: \"\"\n    //  };\n    this.state = {\n      fields: {\n        phone: \"\"\n      },\n      errors: {},\n      showModal: false,\n      loading: false,\n      error: null,\n      modalOpen: false,\n      otp: \"\",\n      otpVerified: false,\n      otpSentSessionId: \"\"\n    };\n    // this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    this.form = new ReactFormInputValidation(this);\n    this.form.useRules({\n        phone: \"required|numeric|digits_between:10,12\",\n    });\n    this.form.onformsubmit = (event) => {\n      console.log(\"phone entered --> \" + this.state.fields.phone)\n      this.openModal();\n    }\n  }\n\n  // openModal() {\n  //   this.setState({\n  //     showModal: true,\n  //   });\n  //   this.handleSendOTP();\n  // }\n\n  closeModal() {\n    this.setState({\n      showModal: false,\n      error: null\n    });\n  }\n  \n  onLoginSuccess(method, response) {\n    console.log('logged successfully with ' + method);\n  }\n\n  onLoginFail(method, response) {\n    console.log('logging failed with ' + method);\n    this.setState({\n      error: response\n    })\n  }\n\n  startLoading() {\n    this.setState({\n      loading: true\n    })\n  }\n\n  finishLoading() {\n    this.setState({\n      loading: false\n    })\n  }\n\n  onTabsChange() {\n    this.setState({\n      error: null\n    });\n  }\n\n\n  async handleSendOTP() {\n    console.log(\"sending otp to \" + this.state.fields.phone);\n    let endPoint = \"https://2factor.in/API/V1/4db73c1e-4cfa-11eb-8153-0200cd936042/SMS/\" + this.state.fields.phone + \"/AUTOGEN\";\n    await fetch(endPoint)\n        .then(res => res.json())\n        .then((data) => {\n          this.setState({ otpSentSessionId: data.Details })\n        })\n        .catch(console.log)\n    console.log(\"otp sent sessionID >> \" + this.state.otpSentSessionId);\n    \n  }\n\n   checkExistingStudent(input) {\n    console.log(\"In checkExistingStudent...\")\n    let result = null;\n    let endPoint = \"http://159.203.148.240:8080/api/v1/Student/\" + input;\n     fetch(endPoint)\n        .then(res => {\n          if(!res.ok) {\n            console.log(\"No Student found with the number \" + input \n                + \" redirecting to new application!\");\n            routeChange();\n          } else {\n            console.log(\"Found an existing record with the number \" + input\n                + \" enrolled, fethcing record!\");\n\n            fetch(\"http://159.203.148.240:8080/api/v1/Student/\" + this.state.phone)\n                .then(resp => resp.json())\n                .then((data) => {\n                  console.log(\"Existing student details --> \" + JSON.stringify(data));\n                  this.setState({studentId: data.student_id});\n                })\n          }\n        }\n        ).catch(console.log);\n  }\n\n   async verifyOTP(otpReceived) {\n    console.log(otpReceived);\n    let validMobile = false;\n    let endPoint = \"https://2factor.in/API/V1/f3e5e9af-4bfb-11eb-8153-0200cd936042/SMS/VERIFY/\" + this.state.otpSentSessionId + \"/\" + otpReceived;\n    await fetch(endPoint)\n        .then(res => {\n          console.log(\"otp verification >> \" + res.staus);\n          if(!res.ok) {\n                throw new Error(`HTTP error! status: ${res.status}`);\n            } else {\n                console.log(\"Status: OK\");\n                validMobile = true;\n            }           \n        })\n        .catch(console.log);\n    return validMobile;\n  }\n\n\n  openModal = () => {\n    this.setState({\n        modalOpen: true            \n    });\n    this.handleSendOTP();\n};\n\ncloseModal = val => {\n    this.setState({\n        modalOpen: false,\n        otp: val\n    })\n}\n  // handleSubmit = () => {\n  //   console.log(\"Validate phone with OTP\");\n  // }\n  \n\n  // handlePhone = (phone) => {\n  //   this.setState({ fields: { fields, phone: phone} });\n  // }\n\n  // handleChange(event) {\n  //   let input = this.state.input;\n  //   input[event.target.name] = event.target.value;\n  //   this.setState({     \n  //     input\n  //   });\n  // }\n\n  // modifyPhone = () => {\n  //   console.log(\"modifying Phone \" + this.state.phone);\n  //   let phoneEntered = this.state.phone;\n  //   let phoneArr = phoneEntered.split(\"+91\");\n  \n  //   let phoneTrimmed = phoneArr[1];\n  //   console.log(\"phone trimemd to \" + phoneTrimmed);\n  //   this.setState({ phoneTrimmed: phoneTrimmed});\n  //   console.log(\"phone in state to \" + this.state.phoneTrimmed);\n  // }\n\n  // handleOTPEntered = (otpEntered) => {\n  //   console.log(\"otp entered by student \" + (this.state.otpEntered))\n  //   this.setState({otpEntered: otpEntered})\n  // }\n\n  \n\n  handleOTPSubmit = () => {\n    let studentExists = false;\n    let input = this.state.otpEntered;\n    // if(!this.verifyOTP(input)) {\n    //   console.log(\"OTP verification failed, Ask user to resend or use a different mobile number!\");\n    // } else {\n      console.log(\"verifying if the mobile number is already registered! \" + this.state.phone);\n      this.checkExistingStudent(this.state.phone);\n  // }\n  }\n\n  handleOTPInput = (otp) => {\n    this.setState({ otp:  otp})\n  }\n\n  \n\n  // handleUserId = (event) => {    \n  //   this.setState({userId: event.target.value});  \n  // }\n\n  // handlePassword = (event) => {    \n  //   this.setState({password: event.target.value});  \n  // }\n\n  getPhone = () => {\n    return this.state.phone\n  }\n\n  // mobileValidate(text) {\n  //   console.log(\"In mobileValidate \" + text)\n  //   const reg = /^[0]?[789]\\d{9}$/;\n  //   if (reg.test(text) === false) {\n  //     this.setState({\n  //       mobilevalidate: false\n  //     });\n  //   } else {\n  //     console.log(\"valid mobile number, setting true\");\n  //     this.isValidNumber = true;\n  //   }\n  //   //this.setState()\n  // }\n\n  // handleStudentSubmit = (e) => {\n  //   this.toggle();\n  //   console.log(\"valid mobile number \" + this.isValidNumber);\n  //   if(!this.isValidNumber) {\n  //     alert(\"Enter a vaild mobile number\");\n  //   } else {\n  //     return (<OtpInput\n  //       onChange={this.handleOTPInput}\n  //       numInputs={6}\n  //       separator={<span>-</span>}\n  //     />)\n  //   }\n  \n  // }\n\n  // renderOtpInput = () => {\n  //   return (<OtpInput\n  //       onChange={this.handleOTPInput}\n  //       numInputs={6}\n  //       separator={<span>-</span>}\n  //     />)\n  // }\n  \n  render() {\n  const { classes } = this.props;\n  const {modalOpen, otpVerified} = this.state;\n  return (<React.Fragment>\n\n    <Container className={useStyles.paper} component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar> \n         <Typography component=\"h1\" variant=\"h5\">\n          Student Sign in\n        </Typography>\n\n        <form onSubmit={this.form.handleSubmit}>\n        <div className=\"form-group\">\n          <p>\n        <label>\n                Phone\n                <input\n                  type=\"tel\"\n                  name=\"phone\"\n                  onBlur={this.form.handleBlurEvent}\n                  onChange={this.form.handleChangeEvent}\n                  value={this.state.fields.phone}\n                />\n              </label>\n              <label className=\"error\">\n                {this.state.errors.phone ? this.state.errors.phone : \"\"}\n              </label>\n            </p>\n        </div>\n        <div className=\"form-group\">\n          <button type=\"submit\"> Sign In </button>\n          {modalOpen ? (\n                    <VerifyModal\n                        show={modalOpen}\n                        close={val => this.closeModal(val)}\n                        headerMessage=\"Enter the 4-digit OTP sent to your mobile number\"\n                        otpSentSessionId={this.state.otpSentSessionId}\n                    />\n                ): null}\n                {otpVerified ? <HomeComponent student=\"true\" /> : null}\n          </div>\n        </form>\n\n        <ReactModalLogin\n          visible={this.state.showModal}\n          onCloseModal={this.closeModal.bind(this)}\n          loading={this.state.loading}\n          error={this.state.error}\n          tabs={{\n            onChange: this.onTabsChange.bind(this)\n          }}\n          loginError={{\n            label: \"Couldn't sign in, please try again.\"\n          }}\n          registerError={{\n            label: \"Couldn't sign up, please try again.\"\n          }}\n          startLoading={this.startLoading.bind(this)}\n          finishLoading={this.finishLoading.bind(this)}\n        />\n  </div>\n  <Box mt={8}>\n    <Copyright />\n  </Box>\n</Container>\n</React.Fragment>\n);\n}\n\n}\n\nPhoneLogin.propTypes = {\n  classes: PropTypes.object.isRequired,\n}\n\n// export default Login;\n\nexport default withStyles(useStyles, { withTheme: true })(PhoneLogin);\n",["132","133"],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/Root.js",["134","135","136"],"import React, { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport Login from './Login';\n\n\n   class Root extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n    \n        return(\n            <div>\n                <p>Please choose a repository from the list below.</p>\n                <ul>\n                    <li><Link to=\"/login\">Login as a Study Center User</Link></li>\n                    <li><Link to=\"/phonelogin\">Login as a Student</Link></li>\n                </ul>\n            </div>\n        );\n\n        }\n    }\n\n   export default Root;","/home/discovery/Documents/onlineapp/svuapp/frontend/src/libs/contextLib.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/VerifyModal.js",["137"],"import React, { Component } from \"react\";\nimport {Modal, ModalBody, ModalFooter, ModalHeader, Button} from \"reactstrap\";\nimport history from './history';\n// import \"./modal.scss\";\n\nconst routeChange = () => { \n    // let path = `/home`; \n    history.push(\"/home\");\n  }\n\nclass VerifyModal extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            otp: [],\n            otpVerified: false\n        };\n        this.textInput1 = React.createRef();\n        this.textInput2 = React.createRef();\n        this.textInput3 = React.createRef();\n        this.textInput4 = React.createRef();\n        this.textInput5 = React.createRef();\n        this.textInput6 = React.createRef();\n\n    }\n\n    componentDidMount() {\n        if (this.props.show === true) {\n            setTimeout( () => {\n                this.textInput1.current.focus();\n            });\n        }\n    }\n\n    handleKeyPress = async (e, field) => {\n        let next = field.current.nextSibling;\n\n        if(next && next.tagName === \"INPUT\") {\n            field.current.nextSibling.focus();\n        }\n        \n        this.setState(prevState => ({\n            otp: [...prevState.otp, field.current.value]\n        }));\n    };\n\n    checkExistingStudent(input) {\n        console.log(\"In checkExistingStudent...\")\n        let result = null;\n        let endPoint = \"http://159.203.148.240:8080/api/v1/Student/\" + input;\n         fetch(endPoint)\n            .then(res => {\n              if(!res.ok) {\n                console.log(\"No Student found with the number \" + input \n                    + \" redirecting to new application!\");\n                routeChange();\n              } else {\n                console.log(\"Found an existing record with the number \" + input\n                    + \" enrolled, fethcing record!\");\n    \n                fetch(\"http://159.203.148.240:8080/api/v1/Student/\" + this.state.phone)\n                    .then(resp => resp.json())\n                    .then((data) => {\n                      console.log(\"Existing student details --> \" + JSON.stringify(data));\n                      this.setState({studentId: data.student_id});\n                    })\n              }\n            }\n            ).catch(console.log);\n      }\n    \n       async verifyOTP(otpReceived) {\n        var length = otpReceived.length;  // find an array length\n        var str = \"\";\n        for(var i=0; i< length; i++){\n            str += otpReceived[i];  // concat Array value to a string variable\n            // if(i < (length-1) ){\n            //     str += ',';  // add separator\n            // }\n        }\n        console.log(\"str array --> \" + str);\n        \n        let validMobile = false;\n        let endPoint = \"https://2factor.in/API/V1/4db73c1e-4cfa-11eb-8153-0200cd936042/SMS/VERIFY/\" + this.props.otpSentSessionId + \"/\" + str;\n        await fetch(endPoint)\n            .then(res => {\n              console.log(\"otp verification >> \" + res.staus);\n              if(!res.ok) {\n                    console.log(`HTTP error! status: ${res.status}`);\n                } else {\n                    console.log(\"Status: OK\");\n                    validMobile = true;\n                }           \n            })\n            .catch(console.log);\n        return validMobile;\n      }\n\n      submitForm = e => {\n        let otpVerified = false;\n        console.log(\" session id received is \" + this.props.otpSentSessionId);\n        let otpEntered = this.state.otp;\n        console.log(\"otp entered\" + otpEntered)\n        this.verifyOTP(otpEntered).then( valid => {\n            if(!valid) {\n                console.log(\"verified --> \" + valid)\n                console.log(\"OTP verification failed, Ask user to resend or use a different mobile number!\");\n                alert(\"In valid OTP, try again!\")\n                this.props.close(otpVerified);\n            }\n            else {\n                console.log(\"OTP verification success \");\n                otpVerified = true;\n                console.log(\"return value to Previous page\" + otpVerified)\n                routeChange();\n        \n        \n            //this.checkExistingStudent(input);\n        }\n          \n        });\n        \n      // }\n      }\n\n    preventSubmit = e => {\n        if(e.which === 13) {\n            e.preventDefault();\n        }\n    }\n\n    render() {\n        return(\n            <React.Fragment>\n                <Modal isOpen={this.props.show} className=\"modal-sm modal-otp\">\n                    <ModalHeader>\n                        <span>{this.props.headerMessage}</span>\n                    </ModalHeader>\n                    <ModalBody>\n                        <form onKeyPress={this.preventSubmit}>\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput1\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput1}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput1)}\n                            />\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput12\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput2}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput2)}\n                            />\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput3\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput3}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput3)}\n                            />\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput4\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput4}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput4)}\n                            />\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput5\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput5}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput5)}\n                            />\n                            <input\n                                className=\"otp_verify_box\"\n                                name=\"textInput6\"\n                                type=\"text\"\n                                maxLength=\"1\"\n                                ref={this.textInput6}\n                                onKeyUp={e => this.handleKeyPress(e, this.textInput6)}\n                            />\n                        </form>\n\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button onClick={this.submitForm}>Submit</Button>\n                    </ModalFooter>\n                </Modal>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default VerifyModal;","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/BetterUser.js",[],"/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/User.js",["138","139","140","141"],"import React, { useState } from \"react\";\n\n// import { Table, Column, DataCell } from 'fixed-data-table-2';\nimport Button from \"@material-ui/core/Button\";\n\nclass User extends React.Component {\n \n    constructor(props){\n    super(props);\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n    }\n    \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n        }\n    \n    getHeader = function(){\n            var keys = this.getKeys();\n            return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n            })\n    }\n    \n    RenderRow = (props) =>{\n        return props.keys.map((key, index)=>{\n            \n        return(<td key={props.data[key]}>{props.data[key]}</td>)\n        })\n    }\n\n    getRowsData = function() {\n        var items = this.props.data;\n        var keys = this.getKeys();\n        console.log(\"keys --> \" + keys);\n        console.log(\"items --> \" + items);\n        return items.map((row, index)=>{\n            console.log(\"row --> \" + row.status);\n            let student = \"\";\n\n            let paymentPending = false;\n            if(row.status === \"Payment pending\") {\n                console.log(\"toggling Payment pending\");\n                paymentPending = true;\n            }\n            return( \n                <tr key={index}>\n                    <RenderRow key={index} data={row} keys={keys}>\n                    {paymentPending \n                    && <td>\n                        <p>Button</p>\n                    </td>\n                    } \n                    </RenderRow>\n                </tr>)\n        })\n    }\n\n    \n    \n\n    \n    render() {\n    return (\n    <div>\n    <table>\n    <thead>\n    <tr>{this.getHeader()}</tr>\n    </thead>\n    <tbody>\n    {this.getRowsData()}\n    </tbody>\n    </table>\n    </div>\n    \n    );\n    }\n   }\n\n   const handlePay = (data) => {\n        console.log(\"Update payment for student --> \" + data)\n   }\n\n   const RenderRow = (props) =>{\n    return props.keys.map((key, index)=>{\n        \n    return(\n\n            \n            <td key={props.data[key]}>{props.data[key]}</td> \n        \n        )\n        })\n    \n   }\n   \n\nexport default User","/home/discovery/Documents/onlineapp/svuapp/frontend/src/components/HomeComponent.js",["142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165"],{"ruleId":"166","severity":1,"message":"167","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":26},{"ruleId":"166","severity":1,"message":"170","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":12},{"ruleId":"166","severity":1,"message":"171","line":4,"column":10,"nodeType":"168","messageId":"169","endLine":4,"endColumn":16},{"ruleId":"166","severity":1,"message":"172","line":5,"column":25,"nodeType":"168","messageId":"169","endLine":5,"endColumn":29},{"ruleId":"166","severity":1,"message":"173","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":13},{"ruleId":"166","severity":1,"message":"174","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":12},{"ruleId":"166","severity":1,"message":"175","line":12,"column":9,"nodeType":"168","messageId":"169","endLine":12,"endColumn":19},{"ruleId":"166","severity":1,"message":"176","line":13,"column":10,"nodeType":"168","messageId":"169","endLine":13,"endColumn":20},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"182","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"183","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"184","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":24},{"ruleId":"166","severity":1,"message":"185","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":24},{"ruleId":"166","severity":1,"message":"186","line":16,"column":10,"nodeType":"168","messageId":"169","endLine":16,"endColumn":20},{"ruleId":"166","severity":1,"message":"187","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":18},{"ruleId":"166","severity":1,"message":"188","line":19,"column":24,"nodeType":"168","messageId":"169","endLine":19,"endColumn":29},{"ruleId":"166","severity":1,"message":"189","line":55,"column":7,"nodeType":"168","messageId":"169","endLine":55,"endColumn":18},{"ruleId":"166","severity":1,"message":"190","line":317,"column":11,"nodeType":"168","messageId":"169","endLine":317,"endColumn":19},{"ruleId":"177","replacedBy":"191"},{"ruleId":"179","replacedBy":"192"},{"ruleId":"177","replacedBy":"193"},{"ruleId":"179","replacedBy":"194"},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"195","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"196","line":6,"column":8,"nodeType":"168","messageId":"169","endLine":6,"endColumn":14},{"ruleId":"166","severity":1,"message":"197","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"198","line":10,"column":8,"nodeType":"168","messageId":"169","endLine":10,"endColumn":12},{"ruleId":"166","severity":1,"message":"183","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":17},{"ruleId":"166","severity":1,"message":"199","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":16},{"ruleId":"166","severity":1,"message":"185","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":24},{"ruleId":"166","severity":1,"message":"200","line":19,"column":10,"nodeType":"168","messageId":"169","endLine":19,"endColumn":18},{"ruleId":"166","severity":1,"message":"201","line":22,"column":8,"nodeType":"168","messageId":"169","endLine":22,"endColumn":19},{"ruleId":"166","severity":1,"message":"202","line":24,"column":8,"nodeType":"168","messageId":"169","endLine":24,"endColumn":18},{"ruleId":"166","severity":1,"message":"203","line":26,"column":8,"nodeType":"168","messageId":"169","endLine":26,"endColumn":20},{"ruleId":"166","severity":1,"message":"204","line":29,"column":10,"nodeType":"168","messageId":"169","endLine":29,"endColumn":23},{"ruleId":"166","severity":1,"message":"205","line":30,"column":9,"nodeType":"168","messageId":"169","endLine":30,"endColumn":22},{"ruleId":"166","severity":1,"message":"188","line":30,"column":24,"nodeType":"168","messageId":"169","endLine":30,"endColumn":29},{"ruleId":"166","severity":1,"message":"206","line":31,"column":8,"nodeType":"168","messageId":"169","endLine":31,"endColumn":21},{"ruleId":"177","replacedBy":"207"},{"ruleId":"179","replacedBy":"208"},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"195","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"196","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":14},{"ruleId":"166","severity":1,"message":"197","line":9,"column":8,"nodeType":"168","messageId":"169","endLine":9,"endColumn":17},{"ruleId":"166","severity":1,"message":"198","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":12},{"ruleId":"166","severity":1,"message":"183","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":17},{"ruleId":"166","severity":1,"message":"199","line":18,"column":8,"nodeType":"168","messageId":"169","endLine":18,"endColumn":16},{"ruleId":"166","severity":1,"message":"185","line":19,"column":8,"nodeType":"168","messageId":"169","endLine":19,"endColumn":24},{"ruleId":"166","severity":1,"message":"200","line":20,"column":10,"nodeType":"168","messageId":"169","endLine":20,"endColumn":18},{"ruleId":"166","severity":1,"message":"201","line":23,"column":8,"nodeType":"168","messageId":"169","endLine":23,"endColumn":19},{"ruleId":"166","severity":1,"message":"202","line":25,"column":8,"nodeType":"168","messageId":"169","endLine":25,"endColumn":18},{"ruleId":"166","severity":1,"message":"203","line":27,"column":8,"nodeType":"168","messageId":"169","endLine":27,"endColumn":20},{"ruleId":"166","severity":1,"message":"209","line":28,"column":8,"nodeType":"168","messageId":"169","endLine":28,"endColumn":16},{"ruleId":"166","severity":1,"message":"210","line":183,"column":9,"nodeType":"168","messageId":"169","endLine":183,"endColumn":15},{"ruleId":"166","severity":1,"message":"211","line":274,"column":9,"nodeType":"168","messageId":"169","endLine":274,"endColumn":22},{"ruleId":"166","severity":1,"message":"212","line":275,"column":9,"nodeType":"168","messageId":"169","endLine":275,"endColumn":14},{"ruleId":"177","replacedBy":"213"},{"ruleId":"179","replacedBy":"214"},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"215","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":7,"column":5,"nodeType":"218","messageId":"219","endLine":9,"endColumn":6},{"ruleId":"166","severity":1,"message":"210","line":50,"column":13,"nodeType":"168","messageId":"169","endLine":50,"endColumn":19},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"196","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":14},{"ruleId":"166","severity":1,"message":"220","line":40,"column":17,"nodeType":"168","messageId":"169","endLine":40,"endColumn":24},{"ruleId":"166","severity":1,"message":"221","line":81,"column":10,"nodeType":"168","messageId":"169","endLine":81,"endColumn":19},{"ruleId":"166","severity":1,"message":"181","line":1,"column":17,"nodeType":"168","messageId":"169","endLine":1,"endColumn":25},{"ruleId":"166","severity":1,"message":"182","line":2,"column":8,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"196","line":3,"column":8,"nodeType":"168","messageId":"169","endLine":3,"endColumn":14},{"ruleId":"166","severity":1,"message":"222","line":4,"column":8,"nodeType":"168","messageId":"169","endLine":4,"endColumn":19},{"ruleId":"166","severity":1,"message":"197","line":5,"column":8,"nodeType":"168","messageId":"169","endLine":5,"endColumn":17},{"ruleId":"166","severity":1,"message":"198","line":7,"column":8,"nodeType":"168","messageId":"169","endLine":7,"endColumn":12},{"ruleId":"166","severity":1,"message":"183","line":8,"column":8,"nodeType":"168","messageId":"169","endLine":8,"endColumn":17},{"ruleId":"166","severity":1,"message":"223","line":11,"column":8,"nodeType":"168","messageId":"169","endLine":11,"endColumn":17},{"ruleId":"166","severity":1,"message":"224","line":12,"column":8,"nodeType":"168","messageId":"169","endLine":12,"endColumn":11},{"ruleId":"166","severity":1,"message":"184","line":13,"column":8,"nodeType":"168","messageId":"169","endLine":13,"endColumn":24},{"ruleId":"166","severity":1,"message":"199","line":14,"column":8,"nodeType":"168","messageId":"169","endLine":14,"endColumn":16},{"ruleId":"166","severity":1,"message":"185","line":15,"column":8,"nodeType":"168","messageId":"169","endLine":15,"endColumn":24},{"ruleId":"166","severity":1,"message":"186","line":16,"column":10,"nodeType":"168","messageId":"169","endLine":16,"endColumn":20},{"ruleId":"166","severity":1,"message":"187","line":17,"column":8,"nodeType":"168","messageId":"169","endLine":17,"endColumn":18},{"ruleId":"166","severity":1,"message":"225","line":18,"column":10,"nodeType":"168","messageId":"169","endLine":18,"endColumn":20},{"ruleId":"166","severity":1,"message":"205","line":19,"column":9,"nodeType":"168","messageId":"169","endLine":19,"endColumn":22},{"ruleId":"166","severity":1,"message":"188","line":19,"column":24,"nodeType":"168","messageId":"169","endLine":19,"endColumn":29},{"ruleId":"166","severity":1,"message":"226","line":25,"column":8,"nodeType":"168","messageId":"169","endLine":25,"endColumn":18},{"ruleId":"166","severity":1,"message":"227","line":29,"column":7,"nodeType":"168","messageId":"169","endLine":29,"endColumn":16},{"ruleId":"166","severity":1,"message":"228","line":49,"column":7,"nodeType":"168","messageId":"169","endLine":49,"endColumn":16},{"ruleId":"166","severity":1,"message":"189","line":62,"column":7,"nodeType":"168","messageId":"169","endLine":62,"endColumn":18},{"ruleId":"166","severity":1,"message":"229","line":83,"column":11,"nodeType":"168","messageId":"169","endLine":83,"endColumn":16},{"ruleId":"166","severity":1,"message":"230","line":83,"column":18,"nodeType":"168","messageId":"169","endLine":83,"endColumn":26},{"ruleId":"166","severity":1,"message":"231","line":134,"column":17,"nodeType":"168","messageId":"169","endLine":134,"endColumn":26},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'render' is defined but never used.","'Link' is defined but never used.","'Table' is defined but never used.","'Home' is defined but never used.","'withRouter' is defined but never used.","'AppContext' is defined but never used.","no-native-reassign",["232"],"no-negated-in-lhs",["233"],"'useState' is defined but never used.","'Avatar' is defined but never used.","'GroupIcon' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'FormControlLabel' is defined but never used.","'useHistory' is defined but never used.","'DatePicker' is defined but never used.","'Route' is defined but never used.","'routeChange' is assigned a value but never used.","'response' is assigned a value but never used.",["232"],["233"],["232"],["233"],"'Popup' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.","'Grid' is defined but never used.","'Checkbox' is defined but never used.","'Redirect' is defined but never used.","'PhoneInput2' is defined but never used.","'PhoneInput' is defined but never used.","'PasswordMask' is defined but never used.","'useAppContext' is defined but never used.","'BrowserRouter' is defined but never used.","'HomeComponent' is defined but never used.",["232"],["233"],"'OtpInput' is defined but never used.","'result' is assigned a value but never used.","'studentExists' is assigned a value but never used.","'input' is assigned a value but never used.",["232"],["233"],"'Login' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'student' is assigned a value but never used.","'handlePay' is assigned a value but never used.","'CssBaseline' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'withStyles' is defined but never used.","'BetterUser' is defined but never used.","'useStyles' is assigned a value but never used.","'Copyright' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'tableSize' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]